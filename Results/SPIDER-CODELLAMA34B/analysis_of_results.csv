DATABASE,GOLD SQL,PREDICTED SQL,DECISION
concert_singer,SELECT count(*) FROM singer,SELECT count(*) FROM singer,CORRECT
concert_singer,SELECT count(*) FROM singer,SELECT count(*) FROM singer,CORRECT
concert_singer,"SELECT name , country , age FROM singer ORDER BY age DESC","SELECT Name , Country , Age FROM singer ORDER BY Age DESC",CORRECT
concert_singer,"SELECT name , country , age FROM singer ORDER BY age DESC","SELECT Name , Country , Age FROM singer ORDER BY Age DESC",CORRECT
concert_singer,"SELECT avg(age) , min(age) , max(age) FROM singer WHERE country = 'France'","SELECT avg(Age) , min(Age) , max(Age) FROM singer WHERE Country = 'France'",CORRECT
concert_singer,"SELECT avg(age) , min(age) , max(age) FROM singer WHERE country = 'France'","SELECT avg(age) , min(age) , max(age) FROM singer WHERE country = ""France""",CORRECT
concert_singer,"SELECT song_name , song_release_year FROM singer ORDER BY age LIMIT 1","SELECT T1.Name , T1.Song_release_year FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID ORDER BY T1.Age ASC LIMIT 1",WRONG
concert_singer,"SELECT song_name , song_release_year FROM singer ORDER BY age LIMIT 1","SELECT t1.name , t1.song_release_year FROM singer AS t1 JOIN singer_in_concert AS t2 ON t1.singer_id = t2.singer_id ORDER BY t1.age LIMIT 1",WRONG
concert_singer,SELECT DISTINCT country FROM singer WHERE age > 20,SELECT DISTINCT Country FROM singer WHERE Age > 20,CORRECT
concert_singer,SELECT DISTINCT country FROM singer WHERE age > 20,SELECT DISTINCT Country FROM singer WHERE Age > 20,CORRECT
concert_singer,"SELECT country , count(*) FROM singer GROUP BY country","SELECT country , count(*) FROM singer GROUP BY country",CORRECT
concert_singer,"SELECT country , count(*) FROM singer GROUP BY country","SELECT Country , COUNT(*) FROM singer GROUP BY Country",CORRECT
concert_singer,SELECT song_name FROM singer WHERE age > (SELECT avg(age) FROM singer),SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer),CORRECT
concert_singer,SELECT song_name FROM singer WHERE age > (SELECT avg(age) FROM singer),SELECT T2.Song_Name FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.Age > (SELECT avg(age) FROM singer),WRONG
concert_singer,"SELECT LOCATION , name FROM stadium WHERE capacity BETWEEN 5000 AND 10000","SELECT Location , Name FROM stadium WHERE Capacity > 5000 AND Capacity < 10000",WRONG
concert_singer,"SELECT LOCATION , name FROM stadium WHERE capacity BETWEEN 5000 AND 10000","SELECT Location , Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000",CORRECT
concert_singer,"SELECT max(capacity), average from stadium","SELECT max(Capacity) , avg(Average) FROM stadium",WRONG
concert_singer,"SELECT avg(capacity) , max(capacity) from stadium","SELECT avg(Capacity) , max(Capacity) FROM stadium",CORRECT
concert_singer,"SELECT name , capacity FROM stadium ORDER BY average DESC LIMIT 1","SELECT T1.name , T1.capacity FROM stadium AS T1 JOIN concert AS T2 ON T1.stadium_id = T2.stadium_id ORDER BY T1.average DESC LIMIT 1",WRONG
concert_singer,"SELECT name , capacity FROM stadium ORDER BY average DESC LIMIT 1","SELECT Name , Capacity FROM stadium WHERE Stadium_ID IN (SELECT Stadium_ID FROM concert WHERE concert_ID IN (SELECT concert_ID FROM singer_in_concert GROUP BY concert_ID ORDER BY count(*) DESC LIMIT 1))",WRONG
concert_singer,SELECT count(*) FROM concert WHERE YEAR = 2014 OR YEAR = 2015,SELECT count(*) FROM concert WHERE year = 2014 OR year = 2015,CORRECT
concert_singer,SELECT count(*) FROM concert WHERE YEAR = 2014 OR YEAR = 2015,SELECT COUNT(*) FROM concert WHERE year = 2014 OR year = 2015,CORRECT
concert_singer,"SELECT T2.name , count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id GROUP BY T1.stadium_id","SELECT stadium.Name, count(*) FROM concert INNER JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID GROUP BY stadium.Name",WRONG
concert_singer,"SELECT T2.name , count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id GROUP BY T1.stadium_id","SELECT t1.Name , count(*) FROM concert AS t1 JOIN stadium AS t2 ON t1.Stadium_ID = t2.Stadium_ID GROUP BY t1.Name",WRONG
concert_singer,"SELECT T2.name , T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.year >= 2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.Name , T1.Capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T1.Year >= 2014 GROUP BY T2.Stadium_ID ORDER BY count(*) DESC LIMIT 1",WRONG
concert_singer,"SELECT t2.name , t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year > 2013 group by t2.stadium_id order by count(*) desc limit 1","SELECT T1.Name, T1.Capacity FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year > 2013 GROUP BY T2.Stadium_ID ORDER BY count(*) DESC LIMIT 1",WRONG
concert_singer,SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,SELECT year FROM concert GROUP BY year ORDER BY count(*) DESC LIMIT 1,CORRECT
concert_singer,SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,SELECT Year FROM concert GROUP BY Year ORDER BY count(*) DESC LIMIT 1,CORRECT
concert_singer,SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert),CORRECT
concert_singer,SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert),CORRECT
concert_singer,SELECT country FROM singer WHERE age > 40 INTERSECT SELECT country FROM singer WHERE age < 30,SELECT DISTINCT Country FROM singer WHERE Age > 40 INTERSECT SELECT DISTINCT Country FROM singer WHERE Age < 30,CORRECT
concert_singer,SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.year = 2014,SELECT Name FROM stadium EXCEPT SELECT T1.Name FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID WHERE T2.Year = 2014,CORRECT
concert_singer,SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.year = 2014,SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = 2014),WRONG
concert_singer,"SELECT T2.concert_name , T2.theme , count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id = T2.concert_id GROUP BY T2.concert_id","SELECT T1.concert_Name , T1.Theme , count(*) FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_ID",CORRECT
concert_singer,"SELECT t2.concert_name , t2.theme , count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id = t2.concert_id group by t2.concert_id","SELECT T1.concert_Name , T1.Theme , COUNT(*) FROM concert AS T1 JOIN singer_in_concert AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_Name , T1.Theme",WRONG
concert_singer,"SELECT T2.name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id","SELECT T2.Name , COUNT(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T2.Singer_ID",CORRECT
concert_singer,"SELECT T2.name , count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id","SELECT T1.Name , count(*) FROM singer AS T1 JOIN singer_in_concert AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name",WRONG
concert_singer,SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014,"SELECT t1.Name FROM singer AS t1 JOIN singer_in_concert AS t2 ON t1.Singer_ID = t2.Singer_ID JOIN concert AS t3 ON t2.concert_ID = t3.concert_ID WHERE t3.Year = ""2014""",CORRECT
concert_singer,SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014,SELECT DISTINCT T2.Name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T1.concert_ID IN (SELECT concert_ID FROM concert WHERE Year = 2014),CORRECT
concert_singer,"SELECT name , country FROM singer WHERE song_name LIKE '%Hey%'","SELECT s.name, s.country FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON c.concert_id = sic.concert_id WHERE c.concert_name LIKE '%Hey%'",WRONG
concert_singer,"SELECT name , country FROM singer WHERE song_name LIKE '%Hey%'","SELECT DISTINCT t1.name, t1.country FROM singer AS t1 JOIN song AS t2 ON t1.singer_id = t2.singer_id WHERE t2.title LIKE ""%Hey%""",WRONG
concert_singer,"SELECT T2.name , T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.Year = 2014 INTERSECT SELECT T2.name , T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.Year = 2015","SELECT t1.name , t1.location FROM stadium AS t1 JOIN concert AS t2 ON t1.stadium_id = t2.stadium_id WHERE t2.year = '2014' INTERSECT SELECT t1.name , t1.location FROM stadium AS t1 JOIN concert AS t2 ON t1.stadium_id = t2.stadium_id WHERE t2.year = '2015'",CORRECT
concert_singer,"SELECT T2.name , T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.Year = 2014 INTERSECT SELECT T2.name , T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.Year = 2015","SELECT DISTINCT t1.name, t1.location FROM stadium AS t1 JOIN concert AS t2 ON t1.stadium_id = t2.stadium_id WHERE t2.year = 2014 INTERSECT SELECT DISTINCT t1.name, t1.location FROM stadium AS t1 JOIN concert AS t2 ON t1.stadium_id = t2.stadium_id WHERE t2.year = 2015",CORRECT
concert_singer,SELECT count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1),SELECT count(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium WHERE Capacity = (SELECT max(Capacity) FROM stadium)),CORRECT
concert_singer,SELECT count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1),"SELECT T1.Stadium_ID , count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Stadium_ID ORDER BY T2.Capacity DESC LIMIT 1",WRONG
pets_1,SELECT count(*) FROM pets WHERE weight > 10,SELECT count(*) FROM Pets WHERE weight > 10,CORRECT
pets_1,SELECT count(*) FROM pets WHERE weight > 10,SELECT count(*) FROM Pets WHERE weight > 10,CORRECT
pets_1,SELECT weight FROM pets ORDER BY pet_age LIMIT 1,SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT min(pet_age) FROM Pets WHERE PetType = 'dog' ),WRONG
pets_1,SELECT weight FROM pets ORDER BY pet_age LIMIT 1,SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT min(pet_age) FROM Pets WHERE PetType = 'dog' ),WRONG
pets_1,"SELECT max(weight) , petType FROM pets GROUP BY petType","SELECT PetType , max(weight) FROM Pets GROUP BY PetType",CORRECT
pets_1,"SELECT max(weight) , petType FROM pets GROUP BY petType","SELECT max(weight) , PetType FROM Pets GROUP BY PetType",CORRECT
pets_1,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid WHERE T1.age > 20,SELECT count(*) FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Age > 20,CORRECT
pets_1,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid WHERE T1.age > 20,SELECT count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID WHERE T1.Age > 20,CORRECT
pets_1,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T2.petid = T3.petid WHERE T1.sex = 'F' AND T3.pettype = 'dog',SELECT count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T1.Sex = 'F' AND T3.PetType = 'dog',CORRECT
pets_1,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T2.petid = T3.petid WHERE T1.sex = 'F' AND T3.pettype = 'dog',"SELECT count(*) FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T1.Sex = ""F"" AND T3.PetType = ""Dog""",WRONG
pets_1,SELECT count(DISTINCT pettype) FROM pets,SELECT count(DISTINCT PetType) FROM Pets,CORRECT
pets_1,SELECT count(DISTINCT pettype) FROM pets,SELECT count(DISTINCT PetType) FROM Pets,CORRECT
pets_1,SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat' OR T3.pettype = 'dog',"SELECT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = ""Cat"" OR PetType = ""Dog""))",WRONG
pets_1,SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat' OR T3.pettype = 'dog',"SELECT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = ""cat"" OR PetType = ""dog""))",WRONG
pets_1,SELECT t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog',"SELECT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = ""cat"" INTERSECT SELECT PetID FROM Pets WHERE PetType = ""dog""))",WRONG
pets_1,SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'dog',SELECT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'cat') INTERSECT SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'dog')),WRONG
pets_1,"SELECT major , age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat')","SELECT major , age FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetType = 'cat')",WRONG
pets_1,"SELECT major , age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat')","SELECT major, age FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'cat'))",CORRECT
pets_1,SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat',"SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = ""Cat""))",WRONG
pets_1,SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat',"SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = ""Cat""",WRONG
pets_1,"SELECT T1.fname , T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat')","SELECT Fname , Age FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = ""Dog"")) AND StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = ""Cat""))",WRONG
pets_1,"SELECT T1.fname , T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat')",SELECT Fname FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'dog')) AND StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'cat')),WRONG
pets_1,"SELECT pettype , weight FROM pets ORDER BY pet_age LIMIT 1","SELECT PetType, weight FROM Pets WHERE PetID = (SELECT PetID FROM Has_Pet WHERE StuID = (SELECT StuID FROM Student ORDER BY Age ASC LIMIT 1))",WRONG
pets_1,"SELECT pettype , weight FROM pets ORDER BY pet_age LIMIT 1","SELECT PetType, weight FROM Pets WHERE PetID = (SELECT PetID FROM Has_Pet WHERE StuID = (SELECT StuID FROM Student ORDER BY Age ASC LIMIT 1))",WRONG
pets_1,"SELECT petid , weight FROM pets WHERE pet_age > 1","SELECT PetID, weight FROM Pets WHERE pet_age > 1",CORRECT
pets_1,"SELECT petid , weight FROM pets WHERE pet_age > 1","SELECT PetID, weight FROM Pets WHERE pet_age > 1",CORRECT
pets_1,"SELECT avg(pet_age) , max(pet_age) , pettype FROM pets GROUP BY pettype","SELECT avg(pet_age) , max(pet_age) FROM Pets GROUP BY PetType",WRONG
pets_1,"SELECT avg(pet_age) , max(pet_age) , pettype FROM pets GROUP BY pettype","SELECT PetType , avg(pet_age) , max(pet_age) FROM Pets GROUP BY PetType",CORRECT
pets_1,"SELECT avg(weight) , pettype FROM pets GROUP BY pettype","SELECT PetType , avg(weight) FROM Pets GROUP BY PetType",CORRECT
pets_1,"SELECT avg(weight) , pettype FROM pets GROUP BY pettype","SELECT avg(weight) , PetType FROM Pets GROUP BY PetType",CORRECT
pets_1,"SELECT DISTINCT T1.fname , T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid","SELECT Fname , Age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID",CORRECT
pets_1,"SELECT DISTINCT T1.fname , T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid","SELECT DISTINCT T1.Fname , T1.Age FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID",CORRECT
pets_1,SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid WHERE T1.Lname = 'Smith',SELECT PetID FROM Has_Pet WHERE StuID IN (SELECT StuID FROM Student WHERE LName = 'Smith'),CORRECT
pets_1,SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid WHERE T1.Lname = 'Smith',SELECT PetID FROM Has_Pet WHERE StuID IN (SELECT StuID FROM Student WHERE LName = 'Smith'),CORRECT
pets_1,"SELECT count(*) , T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid GROUP BY T1.stuid","SELECT T1.StuID , count(*) FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID GROUP BY T1.StuID",CORRECT
pets_1,"SELECT count(*) , t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid","SELECT T1.StuID , count(*) FROM Has_Pet AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID",CORRECT
pets_1,"SELECT T1.fname , T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid GROUP BY T1.stuid HAVING count(*) > 1","SELECT Fname , Sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet GROUP BY StuID HAVING count(*) > 1)",CORRECT
pets_1,"SELECT T1.fname , T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid GROUP BY T1.stuid HAVING count(*) > 1","SELECT T1.Fname , T1.Sex FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID HAVING count(*) > 1",CORRECT
pets_1,SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pet_age = 3 AND T3.pettype = 'cat',SELECT LName FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE pet_age = 3)),WRONG
pets_1,SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pet_age = 3 AND T3.pettype = 'cat',SELECT LName FROM Student WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE pet_age = 3 AND PetType = 'cat'));,WRONG
pets_1,SELECT avg(age) from student where stuid not in (select stuid from has_pet),SELECT avg(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet),CORRECT
pets_1,SELECT avg(age) from student where stuid not in (select stuid from has_pet),SELECT avg(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet),CORRECT
car_1,SELECT count(*) FROM CONTINENTS;,SELECT count(*) FROM continents,CORRECT
car_1,SELECT count(*) FROM CONTINENTS;,SELECT count(*) FROM continents,CORRECT
car_1,"SELECT T1.ContId , T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId;","SELECT T1.ContId , T1.Continent , count(*) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId",CORRECT
car_1,"SELECT T1.ContId , T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId;","SELECT T1.ContId , T1.Continent , count(*) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId",CORRECT
car_1,SELECT count(*) FROM COUNTRIES;,SELECT count(*) FROM countries,CORRECT
car_1,SELECT count(*) FROM COUNTRIES;,SELECT count(*) FROM countries,CORRECT
car_1,"SELECT T1.FullName , T1.Id , count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id;","SELECT car_makers.FullName , car_makers.Id , COUNT(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName , car_makers.Id",CORRECT
car_1,"SELECT T1.FullName , T1.Id , count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id;","SELECT car_makers.Id, car_makers.FullName, count(model_list.Model) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id",CORRECT
car_1,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id ORDER BY T2.horsepower ASC LIMIT 1;,"SELECT cars_data.Id, cars_data.Horsepower, car_names.Model, car_names.Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId ORDER BY cars_data.Horsepower ASC LIMIT 1",WRONG
car_1,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id ORDER BY T2.horsepower ASC LIMIT 1;,SELECT Model FROM cars_data WHERE Horsepower = (SELECT MIN(Horsepower) FROM cars_data),WRONG
car_1,SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.Weight < (SELECT avg(Weight) FROM CARS_DATA),SELECT Model FROM cars_data WHERE weight < (SELECT avg(weight) FROM cars_data),WRONG
car_1,SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.Weight < (SELECT avg(Weight) FROM CARS_DATA),SELECT Model FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE weight < (SELECT avg(weight) FROM cars_data),CORRECT
car_1,SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker JOIN CAR_NAMES AS T3 ON T2.model = T3.model JOIN CARS_DATA AS T4 ON T3.MakeId = T4.id WHERE T4.year = '1970';,SELECT DISTINCT Maker FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId JOIN car_makers AS T3 ON T2.Make = T3.Id WHERE T1.Year = 1970,WRONG
car_1,SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker JOIN CAR_NAMES AS T3 ON T2.model = T3.model JOIN CARS_DATA AS T4 ON T3.MakeId = T4.id WHERE T4.year = '1970';,SELECT DISTINCT T1.Maker FROM cars_data AS T1 JOIN model_list AS T2 ON T1.Id = T2.ModelId WHERE T1.Year = 1970,WRONG
car_1,"SELECT T2.Make , T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId WHERE T1.Year = (SELECT min(YEAR) FROM CARS_DATA);","SELECT T1.Make , T2.Year FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id ORDER BY T2.Year ASC LIMIT 1",WRONG
car_1,"SELECT T2.Make , T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId WHERE T1.Year = (SELECT min(YEAR) FROM CARS_DATA);","SELECT T1.Maker , T2.Year FROM car_makers AS T1 JOIN cars_data AS T2 ON T1.Id = T2.Id ORDER BY T2.Year ASC LIMIT 1",WRONG
car_1,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model = T2.model JOIN CARS_DATA AS T3 ON T2.MakeId = T3.id WHERE T3.year > 1980;,SELECT DISTINCT Model FROM cars_data WHERE Year > 1980,WRONG
car_1,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model = T2.model JOIN CARS_DATA AS T3 ON T2.MakeId = T3.id WHERE T3.year > 1980;,SELECT DISTINCT T1.Model FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Year > 1980,WRONG
car_1,"SELECT T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.continent JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent;","SELECT T1.Continent , COUNT(*) FROM continents AS T1 JOIN countries AS T2 ON T1.ContId = T2.Continent JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent",CORRECT
car_1,"SELECT T1.Continent , count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.continent JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent;","SELECT T1.Continent , count(*) FROM continents AS T1 JOIN car_makers AS T2 ON T1.ContId = T2.Country GROUP BY T1.Continent",WRONG
car_1,SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country = T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;,"SELECT COUNT(car_makers.Country) AS Count, countries.CountryName FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId GROUP BY countries.CountryName ORDER BY Count DESC LIMIT 1",WRONG
car_1,SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country = T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;,"SELECT COUNT(c.CountryName) AS Count, c.CountryName FROM countries AS c JOIN car_makers AS cm ON c.CountryName = cm.Country GROUP BY c.CountryName ORDER BY Count DESC LIMIT 1",WRONG
car_1,"SELECT count(*) , t2.fullname from model_list as t1 join car_makers as t2 on t1.maker = t2.id group by t2.id;","SELECT COUNT(*) , T1.FullName FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.FullName",WRONG
car_1,"SELECT Count(*) , T2.FullName , T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker = T2.Id GROUP BY T2.id;","SELECT COUNT(*) , Maker , FullName FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY Maker",WRONG
car_1,SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId WHERE T2.Make = 'amc hornet sportabout (sw)';,"SELECT Accelerate FROM cars_data WHERE Id IN (SELECT MakeId FROM car_names WHERE Model = ""amc hornet sportabout (sw)"")",WRONG
car_1,SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId WHERE T2.Make = 'amc hornet sportabout (sw)';,SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'amc' AND car_names.Model = 'hornet sportabout (sw)',WRONG
car_1,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france';,SELECT COUNT(DISTINCT car_makers.Id) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'France',WRONG
car_1,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country = T2.CountryId WHERE T2.CountryName = 'france';,SELECT COUNT(DISTINCT car_makers.Id) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'France',WRONG
car_1,SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker = T2.Id JOIN COUNTRIES AS T3 ON T2.Country = T3.CountryId WHERE T3.CountryName = 'usa';,SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'USA',WRONG
car_1,SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker = T2.Id JOIN COUNTRIES AS T3 ON T2.Country = T3.CountryId WHERE T3.CountryName = 'usa';,SELECT COUNT ( DISTINCT Model ) FROM car_names WHERE Make = (SELECT DISTINCT Make FROM car_names WHERE Make = (SELECT DISTINCT Make FROM car_names WHERE Make = (SELECT DISTINCT Make FROM car_names WHERE Make = (SELECT DISTINCT Make FROM car_names WHERE Make = (SELECT DISTINCT Make FROM car_names WHERE Make = (SELECT DISTINCT Make FROM car_names WHERE Make = (SELECT DISTINCT Make FROM car_names WHERE Make = (SELECT DISTINCT Make FROM car_names WHERE Make = (SELECT DISTINCT Make FROM car_names WHERE Make = (SELECT DISTINCT Make FROM car_names WHERE Make = (SELECT DISTINCT Make FROM car_names WHERE Make = (SELECT DISTINCT Make FROM car_names WHERE Make = (SELECT DIST,WRONG
car_1,SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders = 4;,SELECT avg(mpg) FROM cars_data WHERE cylinders = 4,CORRECT
car_1,SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders = 4;,SELECT avg(MPG) FROM cars_data WHERE Cylinders = 4,CORRECT
car_1,SELECT min(weight) from cars_data where cylinders = 8 and year = 1974,SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974,CORRECT
car_1,SELECT min(weight) from cars_data where cylinders = 8 and year = 1974,SELECT min(T1.weight) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.id = T2.makeid WHERE T1.cylinders = 8 AND T1.year = 1974,CORRECT
car_1,"SELECT Maker , Model FROM MODEL_LIST;","SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker",WRONG
car_1,"SELECT Maker , Model FROM MODEL_LIST;","SELECT Maker , Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker",WRONG
car_1,"SELECT T1.CountryName , T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryId HAVING count(*) >= 1;","SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName",WRONG
car_1,"SELECT T1.CountryName , T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryId HAVING count(*) >= 1;","SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country",WRONG
car_1,SELECT count(*) FROM CARS_DATA WHERE horsepower > 150;,SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150,CORRECT
car_1,SELECT count(*) FROM CARS_DATA WHERE horsepower > 150;,SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150,CORRECT
car_1,"SELECT avg(Weight) , YEAR FROM CARS_DATA GROUP BY YEAR;","SELECT year, avg(weight) FROM cars_data GROUP BY year",CORRECT
car_1,"SELECT avg(Weight) , YEAR FROM CARS_DATA GROUP BY YEAR;","SELECT year , avg(weight) FROM cars_data GROUP BY year",CORRECT
car_1,SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent = T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId = T3.Country WHERE T2.Continent = 'europe' GROUP BY T1.CountryName HAVING count(*) >= 3;,"SELECT COUNT(DISTINCT car_makers.Country) AS num_manufacturers, countries.CountryName FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.Continent = 1 GROUP BY countries.CountryName HAVING num_manufacturers >= 3",WRONG
car_1,SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent = T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId = T3.Country WHERE T2.Continent = 'europe' GROUP BY T1.CountryName HAVING count(*) >= 3;,SELECT c.CountryName FROM countries c JOIN car_makers m ON c.CountryId = m.Country GROUP BY c.CountryName HAVING COUNT(m.Id) >= 3,WRONG
car_1,"SELECT T2.horsepower , T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.cylinders = 3 ORDER BY T2.horsepower DESC LIMIT 1;","SELECT max(T1.Horsepower) , T2.Make FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 3",WRONG
car_1,"SELECT T2.horsepower , T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.cylinders = 3 ORDER BY T2.horsepower DESC LIMIT 1;","SELECT T1.Horsepower , T2.Make FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T1.Cylinders = 3 ORDER BY T1.Horsepower DESC LIMIT 1",CORRECT
car_1,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id ORDER BY T2.mpg DESC LIMIT 1;,"SELECT cars_data.MPG, car_names.Model, car_names.Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId ORDER BY cars_data.MPG DESC LIMIT 1",WRONG
car_1,SELECT t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.mpg desc limit 1;,SELECT Model FROM cars_data ORDER BY MPG DESC LIMIT 1,WRONG
car_1,SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR < 1980;,SELECT avg(T1.Horsepower) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId JOIN model_list AS T3 ON T2.Model = T3.Model JOIN car_makers AS T4 ON T3.Maker = T4.Id WHERE T1.Year < 1980,WRONG
car_1,SELECT avg(horsepower) from cars_data where year < 1980;,SELECT avg(T2.Horsepower) FROM cars_data AS T2 JOIN car_names AS T1 ON T1.MakeId = T2.Id WHERE T2.Year < 1980,CORRECT
car_1,SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T1.Model = 'volvo';,SELECT avg(edispl) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.id = T2.makeid WHERE T2.model = 'volvo',CORRECT
car_1,SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T1.Model = 'volvo';,"SELECT avg(edispl) FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId WHERE T2.Make = ""Volvo""",WRONG
car_1,"SELECT max(Accelerate) , Cylinders FROM CARS_DATA GROUP BY Cylinders;","SELECT max(cars_data.Accelerate) , cars_data.Cylinders FROM cars_data GROUP BY cars_data.Cylinders",CORRECT
car_1,"SELECT max(Accelerate) , Cylinders FROM CARS_DATA GROUP BY Cylinders;","SELECT Cylinders , max(Accelerate) FROM cars_data GROUP BY Cylinders",CORRECT
car_1,SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;,"SELECT Model, COUNT(Model) FROM car_names GROUP BY Model ORDER BY COUNT(Model) DESC LIMIT 1",WRONG
car_1,SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;,"SELECT model_list.Model, COUNT(DISTINCT model_list.Model) AS count FROM model_list JOIN car_names ON model_list.Model = car_names.Model GROUP BY model_list.Model ORDER BY count DESC LIMIT 1",WRONG
car_1,SELECT count(*) FROM CARS_DATA WHERE Cylinders > 4;,SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4,CORRECT
car_1,SELECT count(*) FROM CARS_DATA WHERE Cylinders > 4;,SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4,CORRECT
car_1,SELECT count(*) FROM CARS_DATA WHERE YEAR = 1980;,SELECT COUNT(*) FROM cars_data WHERE Year = 1980,CORRECT
car_1,SELECT count(*) FROM CARS_DATA WHERE YEAR = 1980;,SELECT COUNT(cars_data.Id) FROM cars_data WHERE cars_data.Year = 1980,CORRECT
car_1,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker WHERE T1.FullName = 'American Motor Company';,SELECT COUNT(DISTINCT model_list.Model) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker WHERE car_makers.FullName = 'American Motor Company',CORRECT
car_1,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker WHERE T1.FullName = 'American Motor Company';,SELECT count(*) FROM car_makers AS T1 JOIN model_list AS T2 ON T1.id = T2.maker WHERE T1.maker = 'American Motor Company',WRONG
car_1,"SELECT T1.FullName , T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING count(*) > 3;","SELECT T1.FullName , T1.Id FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING COUNT(*) > 3",CORRECT
car_1,"SELECT T1.FullName , T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING count(*) > 3;","SELECT T1.Maker , T1.Id FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING count(*) > 3",WRONG
car_1,SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model = T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker = T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId = T4.Id WHERE T3.FullName = 'General Motors' OR T4.weight > 3500;,"SELECT DISTINCT Model FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId JOIN car_makers AS T3 ON T2.Make = T3.Maker WHERE T3.FullName = ""General Motors"" OR T1.Weight > 3500",WRONG
car_1,SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model = T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker = T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId = T4.Id WHERE T3.FullName = 'General Motors' OR T4.weight > 3500;,SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500,WRONG
car_1,SELECT distinct year from cars_data where weight between 3000 and 4000;,SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000,CORRECT
car_1,SELECT distinct year from cars_data where weight between 3000 and 4000;,SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 INTERSECT SELECT DISTINCT Year FROM cars_data WHERE Weight > 3000,WRONG
car_1,SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;,SELECT cars_data.Horsepower FROM cars_data WHERE cars_data.Accelerate = ( SELECT MAX(cars_data.Accelerate) FROM cars_data ),CORRECT
car_1,SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;,SELECT T1.Horsepower FROM cars_data AS T1 JOIN car_names AS T2 ON T1.Id = T2.MakeId ORDER BY T1.Accelerate DESC LIMIT 1,CORRECT
car_1,SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'volvo' ORDER BY T1.accelerate ASC LIMIT 1;,SELECT MIN(cars_data.Accelerate) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo',WRONG
car_1,SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'volvo' ORDER BY T1.accelerate ASC LIMIT 1;,SELECT cars_data.Cylinders FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'Volvo' ORDER BY cars_data.Accelerate ASC LIMIT 1,WRONG
car_1,SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate > ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );,SELECT COUNT(cars_data.Id) FROM cars_data WHERE cars_data.Accelerate > ( SELECT cars_data.Horsepower FROM cars_data ORDER BY cars_data.Horsepower DESC LIMIT 1 ),WRONG
car_1,SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate > ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );,SELECT count(*) FROM cars_data WHERE Accelerate > (SELECT Accelerate FROM cars_data WHERE Horsepower = (SELECT MAX(Horsepower) FROM cars_data)),CORRECT
car_1,SELECT count(*) from countries as t1 join car_makers as t2 on t1.countryid = t2.country group by t1.countryid having count(*) > 2,"SELECT countries.CountryName, count(car_makers.Id) FROM countries LEFT JOIN car_makers ON countries.CountryName = car_makers.Country GROUP BY countries.CountryName HAVING count(car_makers.Id) > 2",WRONG
car_1,SELECT count(*) from countries as t1 join car_makers as t2 on t1.countryid = t2.country group by t1.countryid having count(*) > 2,SELECT COUNT(*) FROM ( SELECT COUNT(Country) FROM car_makers GROUP BY Country HAVING COUNT(Country) > 2 ),WRONG
car_1,SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders > 6;,SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6,CORRECT
car_1,SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders > 6;,SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6,CORRECT
car_1,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders = 4 ORDER BY T2.horsepower DESC LIMIT 1;,"SELECT Model, Horsepower FROM cars_data WHERE Cylinders = 4 ORDER BY Horsepower DESC LIMIT 1",WRONG
car_1,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders = 4 ORDER BY T2.horsepower DESC LIMIT 1;,"SELECT Model, MAX(Horsepower) AS MaxHorsepower FROM cars_data WHERE Cylinders = 4 GROUP BY Model ORDER BY MaxHorsepower DESC LIMIT 1",WRONG
car_1,"SELECT T2.MakeId , T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId WHERE T1.Horsepower > (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders <= 3;","SELECT T1.MakeId , T1.Make FROM car_names AS T1 JOIN cars_data AS T2 ON T1.MakeId = T2.Id WHERE T2.Horsepower < (SELECT min(Horsepower) FROM cars_data WHERE Cylinders > 3) AND T2.Cylinders < 4",WRONG
car_1,"SELECT t2.makeid , t2.make from cars_data as t1 join car_names as t2 on t1.id = t2.makeid where t1.horsepower > (select min(horsepower) from cars_data) and t1.cylinders < 4;","SELECT cars_data.Id, car_names.Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Horsepower < (SELECT min(Horsepower) FROM cars_data) AND cars_data.Cylinders < 4",WRONG
car_1,SELECT max(mpg) from cars_data where cylinders = 8 or year < 1980,SELECT max(MPG) FROM cars_data WHERE Cylinders = 8 OR Year < 1980,CORRECT
car_1,SELECT max(mpg) from cars_data where cylinders = 8 or year < 1980,SELECT MAX(cars_data.MPG) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Cylinders = 8 OR cars_data.Year < 1980,CORRECT
car_1,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model = T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId = T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker = T4.Id WHERE T3.weight < 3500 AND T4.FullName != 'Ford Motor Company';,"SELECT cars_data.Id, cars_data.MPG, cars_data.Cylinders, cars_data.Edispl, cars_data.Horsepower, cars_data.Weight, cars_data.Accelerate, cars_data.Year, car_names.Make, car_names.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Weight < 3500 AND car_names.Make != 'Ford Motor Company'",WRONG
car_1,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model = T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId = T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker = T4.Id WHERE T3.weight < 3500 AND T4.FullName != 'Ford Motor Company';,SELECT DISTINCT(cars_data.Id) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Weight < 3500 AND car_makers.Maker != 'Ford Motor Company',WRONG
car_1,SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId = T2.Country;,SELECT CountryName FROM countries WHERE CountryId NOT IN ( SELECT Country FROM car_makers ),WRONG
car_1,SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId = T2.Country;,SELECT CountryName FROM countries WHERE CountryId NOT IN ( SELECT Country FROM car_makers ),WRONG
car_1,"SELECT t1.id , t1.maker from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id having count(*) >= 2 intersect select t1.id , t1.maker from car_makers as t1 join model_list as t2 on t1.id = t2.maker join car_names as t3 on t2.model = t3.model group by t1.id having count(*) > 3;","SELECT T1.Id , T1.Maker FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING count(*) > 2 INTERSECT SELECT T1.Id , T1.Maker FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING count(*) > 3",WRONG
car_1,"SELECT T1.Id , T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING count(*) >= 2 INTERSECT SELECT T1.Id , T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker JOIN CAR_NAMES AS T3 ON T2.model = T3.model GROUP BY T1.Id HAVING count(*) > 3;","SELECT T1.Id, T1.Maker FROM car_makers AS T1 JOIN model_list AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING COUNT(T2.Model) >= 2 AND COUNT(T1.Id) > 3",WRONG
car_1,"SELECT T1.countryId , T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country GROUP BY T1.countryId HAVING count(*) > 3 UNION SELECT T1.countryId , T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country JOIN MODEL_LIST AS T3 ON T2.Id = T3.Maker WHERE T3.Model = 'fiat';","SELECT c.CountryId, c.CountryName FROM countries AS c JOIN car_makers AS cm ON c.CountryId = cm.Country JOIN model_list AS ml ON cm.Id = ml.Maker JOIN car_names AS cn ON ml.ModelId = cn.MakeId WHERE cn.Model = 'fiat' GROUP BY c.CountryId, c.CountryName HAVING COUNT(DISTINCT cm.Id) > 3",WRONG
car_1,"SELECT t1.countryid , t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country group by t1.countryid having count(*) > 3 union select t1.countryid , t1.countryname from countries as t1 join car_makers as t2 on t1.countryid = t2.country join model_list as t3 on t2.id = t3.maker where t3.model = 'fiat';","SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY countries.CountryId, countries.CountryName HAVING COUNT(car_makers.Id) > 3 OR COUNT(cars_data.Id) > 0",WRONG
flight_2,"SELECT Country FROM AIRLINES WHERE Airline = ""JetBlue Airways""","SELECT Country FROM airlines WHERE Airline = ""JetBlue Airways""",CORRECT
flight_2,"SELECT Country FROM AIRLINES WHERE Airline = ""JetBlue Airways""","SELECT Country FROM airlines WHERE Airline = ""Jetblue Airways"";",WRONG
flight_2,"SELECT Abbreviation FROM AIRLINES WHERE Airline = ""JetBlue Airways""","SELECT Abbreviation FROM airlines WHERE Airline = ""JetBlue Airways""",CORRECT
flight_2,"SELECT Abbreviation FROM AIRLINES WHERE Airline = ""JetBlue Airways""","SELECT Abbreviation FROM airlines WHERE Airline = ""Jetblue Airways"";",WRONG
flight_2,"SELECT Airline , Abbreviation FROM AIRLINES WHERE Country = ""USA""","SELECT Airline , Abbreviation FROM airlines WHERE Country = ""USA""",CORRECT
flight_2,"SELECT Airline , Abbreviation FROM AIRLINES WHERE Country = ""USA""","SELECT Airline , Abbreviation FROM airlines WHERE Country = 'USA'",CORRECT
flight_2,"SELECT AirportCode , AirportName FROM AIRPORTS WHERE city = ""Anthony""","SELECT AirportCode , AirportName FROM airports WHERE City = 'Anthony'",CORRECT
flight_2,"SELECT AirportCode , AirportName FROM AIRPORTS WHERE city = ""Anthony""","SELECT AirportCode , AirportName FROM airports WHERE City = ""Anthony""",CORRECT
flight_2,SELECT count(*) FROM AIRLINES,SELECT count(distinct Airline) FROM flights,WRONG
flight_2,SELECT count(*) FROM AIRLINES,SELECT count(*) FROM airlines,CORRECT
flight_2,SELECT count(*) FROM AIRPORTS,SELECT count(*) FROM airports,CORRECT
flight_2,SELECT count(*) FROM AIRPORTS,SELECT count(*) FROM airports,CORRECT
flight_2,SELECT count(*) FROM FLIGHTS,SELECT count(*) FROM flights,CORRECT
flight_2,SELECT count(*) FROM FLIGHTS,SELECT COUNT(*) FROM flights,CORRECT
flight_2,"SELECT Airline FROM AIRLINES WHERE Abbreviation = ""UAL""","SELECT Airline FROM airlines WHERE Abbreviation = ""UAL""",CORRECT
flight_2,"SELECT Airline FROM AIRLINES WHERE Abbreviation = ""UAL""","SELECT Airline FROM airlines WHERE Abbreviation = ""UAL""",CORRECT
flight_2,"SELECT count(*) FROM AIRLINES WHERE Country = ""USA""",SELECT COUNT(*) FROM airlines WHERE Country = 'USA',CORRECT
flight_2,"SELECT count(*) FROM AIRLINES WHERE Country = ""USA""",SELECT count(*) FROM airlines AS T1 JOIN airports AS T2 ON T1.Country = T2.Country WHERE T2.Country = 'USA',WRONG
flight_2,"SELECT City , Country FROM AIRPORTS WHERE AirportName = ""Alton""","SELECT airports.City, airports.Country FROM airports WHERE airports.AirportCode = 'ALT'",WRONG
flight_2,"SELECT City , Country FROM AIRPORTS WHERE AirportName = ""Alton""","SELECT City , Country FROM airports WHERE AirportCode = 'ALT'",WRONG
flight_2,"SELECT AirportName FROM AIRPORTS WHERE AirportCode = ""AKO""",SELECT AirportName FROM airports WHERE AirportCode = 'AKO',CORRECT
flight_2,"SELECT AirportName FROM AIRPORTS WHERE AirportCode = ""AKO""",SELECT AirportName FROM airports WHERE AirportCode = 'AKO',CORRECT
flight_2,"SELECT AirportName FROM AIRPORTS WHERE City = ""Aberdeen""","SELECT AirportName FROM airports WHERE City = ""Aberdeen""",CORRECT
flight_2,"SELECT AirportName FROM AIRPORTS WHERE City = ""Aberdeen""",SELECT AirportName FROM airports WHERE City = 'Aberdeen',CORRECT
flight_2,"SELECT count(*) FROM FLIGHTS WHERE SourceAirport = ""APG""",SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG',CORRECT
flight_2,"SELECT count(*) FROM FLIGHTS WHERE SourceAirport = ""APG""",SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG',CORRECT
flight_2,"SELECT count(*) FROM FLIGHTS WHERE DestAirport = ""ATO""","SELECT count(*) FROM flights WHERE DestAirport = ""ATO""",CORRECT
flight_2,"SELECT count(*) FROM FLIGHTS WHERE DestAirport = ""ATO""",SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.AirportCode = 'ATO',CORRECT
flight_2,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""",SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen',CORRECT
flight_2,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""",SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.City = 'Aberdeen',CORRECT
flight_2,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""",SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen',CORRECT
flight_2,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""",SELECT count(*) FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City = 'Aberdeen',CORRECT
flight_2,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport = T3.AirportCode WHERE T2.City = ""Ashley"" AND T3.City = ""Aberdeen""","SELECT count(*) FROM flights AS t1 JOIN airports AS t2 ON t1.SourceAirport = t2.AirportCode JOIN airports AS t3 ON t1.DestAirport = t3.AirportCode WHERE t2.City = ""Aberdeen"" AND t3.City = ""Ashley""",CORRECT
flight_2,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport = T3.AirportCode WHERE T2.City = ""Ashley"" AND T3.City = ""Aberdeen""",SELECT COUNT(*) FROM flights WHERE SourceAirport = 'ABD' AND DestAirport = 'ASH',WRONG
flight_2,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline = T2.uid WHERE T2.Airline = ""JetBlue Airways""",SELECT count(*) FROM flights WHERE Airline = (SELECT uid FROM airlines WHERE Airline = 'JetBlue Airways'),WRONG
flight_2,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline = T2.uid WHERE T2.Airline = ""JetBlue Airways""",SELECT COUNT(*) FROM flights WHERE Airline = ( SELECT uid FROM airlines WHERE Airline = 'Jetblue Airways' ),WRONG
flight_2,"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline = T1.uid WHERE T1.Airline = ""United Airlines"" AND T2.DestAirport = ""ASY""",SELECT COUNT(*) FROM flights WHERE Airline = (SELECT uid FROM airlines WHERE Airline = 'United Airlines') AND DestAirport = 'ASY',WRONG
flight_2,"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline = T1.uid WHERE T1.Airline = ""United Airlines"" AND T2.DestAirport = ""ASY""",SELECT count(*) FROM flights JOIN airlines ON flights.Airline = airlines.uid JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airlines.Airline = 'United Airlines' AND airports.AirportCode = 'ASY',CORRECT
flight_2,"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline = T1.uid WHERE T1.Airline = ""United Airlines"" AND T2.SourceAirport = ""AHD""",SELECT COUNT(*) FROM flights AS t1 JOIN airlines AS t2 ON t1.Airline = t2.uid WHERE t2.Airline = 'United Airlines' AND t1.SourceAirport = 'AHD',CORRECT
flight_2,"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline = T1.uid WHERE T1.Airline = ""United Airlines"" AND T2.SourceAirport = ""AHD""",SELECT COUNT(*) FROM flights WHERE Airline = ( SELECT uid FROM airlines WHERE Airline = 'United Airlines' ) AND SourceAirport = 'AHD',CORRECT
flight_2,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid = T1.Airline WHERE T2.City = ""Aberdeen"" AND T3.Airline = ""United Airlines""",SELECT COUNT(*) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T2.Airline = 'United Airlines' AND T1.DestAirport = 'ABD',WRONG
flight_2,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid = T1.Airline WHERE T2.City = ""Aberdeen"" AND T3.Airline = ""United Airlines""","SELECT count(*) FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T2.Airline = ""United Airlines"" AND T1.DestAirport = ""ABD""",WRONG
flight_2,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode = T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY count(*) DESC LIMIT 1,WRONG
flight_2,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode = T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,"SELECT t1.City, t2.DestAirport, COUNT(t2.DestAirport) AS DestCount FROM airports AS t1 JOIN flights AS t2 ON t1.AirportCode = t2.DestAirport GROUP BY t1.City, t2.DestAirport ORDER BY DestCount DESC LIMIT 1",WRONG
flight_2,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode = T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,"SELECT airports.City, count(flights.SourceAirport) AS num_flights FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY airports.City ORDER BY num_flights DESC LIMIT 1",WRONG
flight_2,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode = T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,SELECT airports.City FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode GROUP BY airports.City ORDER BY count(*) DESC LIMIT 1,CORRECT
flight_2,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode = T2.DestAirport OR T1.AirportCode = T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1,SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY count(*) DESC LIMIT 1,WRONG
flight_2,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode = T2.DestAirport OR T1.AirportCode = T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1,"SELECT airports.AirportCode, count(flights.SourceAirport) AS num_flights FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY airports.AirportCode ORDER BY num_flights DESC LIMIT 1",WRONG
flight_2,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode = T2.DestAirport OR T1.AirportCode = T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1,SELECT SourceAirport FROM flights GROUP BY SourceAirport ORDER BY count(*) ASC LIMIT 1,WRONG
flight_2,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode = T2.DestAirport OR T1.AirportCode = T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1,SELECT SourceAirport FROM flights GROUP BY SourceAirport ORDER BY count(*) ASC LIMIT 1,WRONG
flight_2,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1,"SELECT airlines.Airline, COUNT(flights.FlightNo) AS num_flights FROM airlines JOIN flights ON airlines.uid = flights.Airline GROUP BY airlines.Airline ORDER BY num_flights DESC LIMIT 1",WRONG
flight_2,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1,"SELECT t1.Airline , COUNT ( * ) FROM flights AS t1 GROUP BY t1.Airline ORDER BY COUNT ( * ) DESC LIMIT 1",WRONG
flight_2,"SELECT T1.Abbreviation , T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1","SELECT Abbreviation , Country FROM airlines WHERE uid = ( SELECT Airline FROM flights GROUP BY Airline ORDER BY count(*) ASC LIMIT 1 )",WRONG
flight_2,"SELECT T1.Abbreviation , T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1","SELECT airlines.Abbreviation, airlines.Country FROM airlines JOIN flights ON airlines.uid = flights.Airline GROUP BY airlines.Abbreviation, airlines.Country ORDER BY COUNT(*) LIMIT 1",WRONG
flight_2,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""AHD""",SELECT airlines.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE flights.SourceAirport = 'AHD',CORRECT
flight_2,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""AHD""","SELECT DISTINCT Airline FROM flights WHERE SourceAirport = ""AHD""",WRONG
flight_2,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline WHERE T2.DestAirport = ""AHD""",SELECT DISTINCT Airline FROM flights WHERE DestAirport = 'AHD',WRONG
flight_2,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline WHERE T2.DestAirport = ""AHD""",SELECT airlines.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE flights.DestAirport = 'AHD',CORRECT
flight_2,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""APG"" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""CVO""",SELECT DISTINCT Airline FROM flights WHERE SourceAirport = 'APG' OR DestAirport = 'APG' OR SourceAirport = 'CVO' OR DestAirport = 'CVO',WRONG
flight_2,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""APG"" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""CVO""","SELECT f.Airline FROM flights AS f WHERE f.SourceAirport IN ('APG', 'CVO') GROUP BY f.Airline HAVING COUNT(DISTINCT f.SourceAirport) = 2",WRONG
flight_2,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""CVO"" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""APG""",SELECT airlines.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE flights.SourceAirport = 'CVO' EXCEPT SELECT airlines.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE flights.SourceAirport = 'APG',CORRECT
flight_2,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""CVO"" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = ""APG""",SELECT airlines.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE flights.SourceAirport = 'CVO' AND flights.SourceAirport NOT IN ( SELECT flights.SourceAirport FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE flights.SourceAirport = 'APG' ),WRONG
flight_2,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline HAVING count(*) > 10,SELECT Airline FROM flights GROUP BY Airline HAVING count(*) >= 10,WRONG
flight_2,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline HAVING count(*) > 10,SELECT Airline FROM flights GROUP BY Airline HAVING count(*) >= 10,WRONG
flight_2,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline HAVING count(*) < 200,"SELECT airlines.Airline, COUNT(flights.FlightNo) AS NumFlights FROM airlines LEFT JOIN flights ON airlines.uid = flights.Airline GROUP BY airlines.Airline HAVING COUNT(flights.FlightNo) < 200",WRONG
flight_2,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline HAVING count(*) < 200,SELECT Airline FROM flights GROUP BY Airline HAVING count(*) < 200,WRONG
flight_2,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid = T1.Airline WHERE T2.Airline = ""United Airlines""","SELECT FlightNo FROM flights WHERE Airline = (SELECT uid FROM airlines WHERE Airline = ""United Airlines"")",WRONG
flight_2,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid = T1.Airline WHERE T2.Airline = ""United Airlines""","SELECT FlightNo FROM flights WHERE Airline = (SELECT uid FROM airlines WHERE Airline = ""United Airlines"")",WRONG
flight_2,"SELECT FlightNo FROM FLIGHTS WHERE SourceAirport = ""APG""","SELECT FlightNo FROM flights WHERE SourceAirport = ""APG""",CORRECT
flight_2,"SELECT FlightNo FROM FLIGHTS WHERE SourceAirport = ""APG""","SELECT FlightNo FROM flights WHERE SourceAirport = ""APG""",CORRECT
flight_2,"SELECT FlightNo FROM FLIGHTS WHERE DestAirport = ""APG""","SELECT FlightNo FROM flights WHERE DestAirport = ""APG""",CORRECT
flight_2,"SELECT FlightNo FROM FLIGHTS WHERE DestAirport = ""APG""",SELECT FlightNo FROM flights WHERE DestAirport = 'APG',CORRECT
flight_2,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""","SELECT FlightNo FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""",CORRECT
flight_2,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""","SELECT FlightNo FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""",CORRECT
flight_2,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""","SELECT FlightNo FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""",CORRECT
flight_2,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.City = ""Aberdeen""",SELECT flights.FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen',CORRECT
flight_2,"SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.city = ""Aberdeen"" OR T2.city = ""Abilene""",SELECT COUNT(*) FROM flights AS t1 JOIN airports AS t2 ON t1.DestAirport = t2.AirportCode WHERE t2.City = 'Aberdeen' OR t2.City = 'Abilene',CORRECT
flight_2,"SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.city = ""Aberdeen"" OR T2.city = ""Abilene""","SELECT COUNT(*) FROM flights WHERE DestAirport IN ( SELECT AirportCode FROM airports WHERE City IN (""Aberdeen"", ""Abilene"") )",CORRECT
flight_2,SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights),SELECT AirportCode FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights),WRONG
flight_2,SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights),"SELECT airports.AirportCode, airports.AirportName, airports.City, airports.Country FROM airports WHERE airports.AirportCode NOT IN ( SELECT flights.SourceAirport FROM flights UNION SELECT flights.DestAirport FROM flights )",WRONG
employee_hire_evaluation,SELECT count(*) FROM employee,SELECT count(*) FROM employee,CORRECT
employee_hire_evaluation,SELECT count(*) FROM employee,SELECT count(*) FROM employee,CORRECT
employee_hire_evaluation,SELECT name FROM employee ORDER BY age,SELECT Name FROM employee ORDER BY Age ASC,CORRECT
employee_hire_evaluation,SELECT name FROM employee ORDER BY age,SELECT Name FROM employee ORDER BY Age ASC,CORRECT
employee_hire_evaluation,"SELECT count(*) , city FROM employee GROUP BY city","SELECT City , count(*) FROM employee GROUP BY City",CORRECT
employee_hire_evaluation,"SELECT count(*) , city FROM employee GROUP BY city","SELECT City, count(*) FROM employee GROUP BY City",CORRECT
employee_hire_evaluation,SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING count(*) > 1,SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(City) > 1,CORRECT
employee_hire_evaluation,SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING count(*) > 1,SELECT DISTINCT city FROM employee WHERE age < 30 GROUP BY city HAVING count(*) > 1,CORRECT
employee_hire_evaluation,"SELECT count(*) , LOCATION FROM shop GROUP BY LOCATION","SELECT t1.location , count(*) FROM shop AS t1 GROUP BY t1.location",CORRECT
employee_hire_evaluation,"SELECT count(*) , LOCATION FROM shop GROUP BY LOCATION","SELECT Location , COUNT(*) FROM shop GROUP BY Location",CORRECT
employee_hire_evaluation,"SELECT manager_name , district FROM shop ORDER BY number_products DESC LIMIT 1","SELECT Manager_name, District FROM shop ORDER BY Number_products DESC LIMIT 1",CORRECT
employee_hire_evaluation,"SELECT manager_name , district FROM shop ORDER BY number_products DESC LIMIT 1","SELECT Manager_name , District FROM shop ORDER BY Number_products DESC LIMIT 1",CORRECT
employee_hire_evaluation,"SELECT min(Number_products) , max(Number_products) FROM shop","SELECT min(Number_products) , max(Number_products) FROM shop",CORRECT
employee_hire_evaluation,"SELECT min(Number_products) , max(Number_products) FROM shop","SELECT min(Number_products) , max(Number_products) FROM shop",CORRECT
employee_hire_evaluation,"SELECT name , LOCATION , district FROM shop ORDER BY number_products DESC","SELECT Name , Location , District FROM shop ORDER BY Number_products DESC",CORRECT
employee_hire_evaluation,"SELECT name , LOCATION , district FROM shop ORDER BY number_products DESC","SELECT Name , Location , District FROM shop ORDER BY Number_products DESC",CORRECT
employee_hire_evaluation,SELECT name FROM shop WHERE number_products > (SELECT avg(number_products) FROM shop),SELECT shop.Name FROM shop WHERE shop.Number_products > (SELECT avg(shop.Number_products) FROM shop),CORRECT
employee_hire_evaluation,SELECT name FROM shop WHERE number_products > (SELECT avg(number_products) FROM shop),SELECT shop.Name FROM shop WHERE shop.Number_products > (SELECT avg(Number_products) FROM shop),CORRECT
employee_hire_evaluation,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID = t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID = t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1,CORRECT
employee_hire_evaluation,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID = t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1,SELECT T1.Name FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1,WRONG
employee_hire_evaluation,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID = t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1,SELECT T1.Name FROM employee AS T1 JOIN evaluation AS T2 ON T1.Employee_ID = T2.Employee_ID ORDER BY T2.Bonus DESC LIMIT 1,CORRECT
employee_hire_evaluation,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID = t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.employee_id = t2.employee_id ORDER BY t2.bonus DESC LIMIT 1,CORRECT
employee_hire_evaluation,SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation),SELECT employee.Name FROM employee WHERE employee.Employee_ID NOT IN (SELECT evaluation.Employee_ID FROM evaluation),CORRECT
employee_hire_evaluation,SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation),SELECT employee.Name FROM employee EXCEPT SELECT T1.Name FROM evaluation AS T1 JOIN employee AS T2 ON T1.Employee_ID = T2.Employee_ID,WRONG
employee_hire_evaluation,SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id = t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1,SELECT shop.Name FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID GROUP BY shop.Name ORDER BY COUNT(hiring.Employee_ID) DESC LIMIT 1,WRONG
employee_hire_evaluation,SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id = t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1,SELECT T2.Name FROM hiring AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1,CORRECT
employee_hire_evaluation,SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring),SELECT shop.Name FROM shop WHERE shop.Shop_ID NOT IN (SELECT hiring.Shop_ID FROM hiring),CORRECT
employee_hire_evaluation,SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring),SELECT shop.Name FROM shop LEFT JOIN hiring ON shop.Shop_ID = hiring.Shop_ID WHERE hiring.Employee_ID IS NULL,CORRECT
employee_hire_evaluation,"SELECT count(*) , t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id = t2.shop_id GROUP BY t2.name","SELECT t1.Name , count(*) FROM shop AS t1 JOIN hiring AS t2 ON t1.Shop_ID = t2.Shop_ID GROUP BY t1.Name",CORRECT
employee_hire_evaluation,"SELECT count(*) , t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id = t2.shop_id GROUP BY t2.name","SELECT T1.Shop_ID , T1.Name , count(*) FROM shop AS T1 JOIN hiring AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID",WRONG
employee_hire_evaluation,SELECT sum(bonus) FROM evaluation,SELECT SUM(Bonus) FROM evaluation,CORRECT
employee_hire_evaluation,SELECT sum(bonus) FROM evaluation,SELECT sum(Bonus) FROM evaluation,CORRECT
employee_hire_evaluation,SELECT * FROM hiring,SELECT * FROM hiring,CORRECT
employee_hire_evaluation,SELECT * FROM hiring,SELECT * FROM hiring,CORRECT
employee_hire_evaluation,SELECT district FROM shop WHERE Number_products < 3000 INTERSECT SELECT district FROM shop WHERE Number_products > 10000,SELECT DISTRICT FROM shop WHERE Number_products < 3000 INTERSECT SELECT DISTRICT FROM shop WHERE Number_products > 10000,CORRECT
employee_hire_evaluation,SELECT district FROM shop WHERE Number_products < 3000 INTERSECT SELECT district FROM shop WHERE Number_products > 10000,SELECT DISTINCT district FROM shop WHERE number_products < 3000 INTERSECT SELECT DISTINCT district FROM shop WHERE number_products > 10000,CORRECT
employee_hire_evaluation,SELECT count(DISTINCT LOCATION) FROM shop,"SELECT COUNT(DISTINCT ""Location"") FROM ""shop""",CORRECT
employee_hire_evaluation,SELECT count(DISTINCT LOCATION) FROM shop,SELECT COUNT(DISTINCT Location) FROM shop,CORRECT
cre_Doc_Template_Mgt,SELECT count(*) FROM Documents,SELECT count(*) FROM Documents,CORRECT
cre_Doc_Template_Mgt,SELECT count(*) FROM Documents,SELECT count(*) FROM Documents,CORRECT
cre_Doc_Template_Mgt,"SELECT document_id , document_name , document_description FROM Documents","SELECT Document_ID , Document_Name , Document_Description FROM Documents",CORRECT
cre_Doc_Template_Mgt,"SELECT document_id , document_name , document_description FROM Documents","SELECT Document_ID , Document_Name , Document_Description FROM Documents",CORRECT
cre_Doc_Template_Mgt,"SELECT document_name , template_id FROM Documents WHERE Document_Description LIKE ""%w%""","SELECT t1.document_name , t1.template_id FROM documents AS t1 JOIN templates AS t2 ON t1.template_id = t2.template_id WHERE t2.template_details LIKE '%w%'",WRONG
cre_Doc_Template_Mgt,"SELECT document_name , template_id FROM Documents WHERE Document_Description LIKE ""%w%""","SELECT Document_Name , Document_ID FROM Documents WHERE Document_Description LIKE ""%w%""",WRONG
cre_Doc_Template_Mgt,"SELECT document_id , template_id , Document_Description FROM Documents WHERE document_name = ""Robbin CV""","SELECT t1.document_id , t1.template_id , t2.template_type_description FROM documents AS t1 JOIN ref_template_types AS t2 ON t1.template_id = t2.template_type_code WHERE t1.document_name = ""Robbin CV""",WRONG
cre_Doc_Template_Mgt,"SELECT document_id , template_id , Document_Description FROM Documents WHERE document_name = ""Robbin CV""","SELECT Document_ID , Template_ID , Document_Description FROM Documents WHERE Document_Name = ""Robbin CV""",CORRECT
cre_Doc_Template_Mgt,SELECT count(DISTINCT template_id) FROM Documents,SELECT count(DISTINCT Template_ID) FROM Documents,CORRECT
cre_Doc_Template_Mgt,SELECT count(DISTINCT template_id) FROM Documents,SELECT count(DISTINCT Template_ID) FROM Documents,CORRECT
cre_Doc_Template_Mgt,SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'PPT',"SELECT count(*) FROM Documents WHERE Template_ID IN (SELECT Template_ID FROM Templates WHERE Template_Type_Code = ""PPT"")",CORRECT
cre_Doc_Template_Mgt,SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'PPT',SELECT COUNT(DISTINCT Documents.Document_ID) FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'PPT',WRONG
cre_Doc_Template_Mgt,"SELECT template_id , count(*) FROM Documents GROUP BY template_id","SELECT T1.Template_ID , COUNT(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID",CORRECT
cre_Doc_Template_Mgt,"SELECT template_id , count(*) FROM Documents GROUP BY template_id","SELECT t1.Template_ID, count(*) FROM Documents AS t1 JOIN Templates AS t2 ON t1.Template_ID = t2.Template_ID GROUP BY t1.Template_ID",CORRECT
cre_Doc_Template_Mgt,"SELECT T1.template_id , T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.template_id , T2.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",WRONG
cre_Doc_Template_Mgt,"SELECT T1.template_id , T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.Template_ID , T2.Template_Type_Code FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID ORDER BY count(*) DESC LIMIT 1",WRONG
cre_Doc_Template_Mgt,SELECT template_id FROM Documents GROUP BY template_id HAVING count(*) > 1,SELECT T1.Template_ID FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID HAVING count(*) > 1,CORRECT
cre_Doc_Template_Mgt,SELECT template_id FROM Documents GROUP BY template_id HAVING count(*) > 1,SELECT T1.Template_ID FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID GROUP BY T1.Template_ID HAVING COUNT(*) > 1,CORRECT
cre_Doc_Template_Mgt,SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents,SELECT Template_ID FROM Templates EXCEPT SELECT Template_ID FROM Documents,CORRECT
cre_Doc_Template_Mgt,SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents,SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents),CORRECT
cre_Doc_Template_Mgt,SELECT count(*) FROM Templates,SELECT count(*) FROM Templates,CORRECT
cre_Doc_Template_Mgt,SELECT count(*) FROM Templates,SELECT count(*) FROM Templates,CORRECT
cre_Doc_Template_Mgt,"SELECT template_id , version_number , template_type_code FROM Templates","SELECT Template_ID , Version_Number , Template_Type_Code FROM Templates",CORRECT
cre_Doc_Template_Mgt,"SELECT template_id , version_number , template_type_code FROM Templates","SELECT Template_ID , Version_Number , Template_Type_Code FROM Templates",CORRECT
cre_Doc_Template_Mgt,SELECT DISTINCT template_type_code FROM Templates,SELECT DISTINCT Template_Type_Code FROM Templates,CORRECT
cre_Doc_Template_Mgt,SELECT DISTINCT template_type_code FROM Templates,SELECT DISTINCT Template_Type_Code FROM Ref_Template_Types,WRONG
cre_Doc_Template_Mgt,"SELECT template_id FROM Templates WHERE template_type_code = ""PP"" OR template_type_code = ""PPT""",SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'PP' OR Template_Type_Code = 'PPT',CORRECT
cre_Doc_Template_Mgt,"SELECT template_id FROM Templates WHERE template_type_code = ""PP"" OR template_type_code = ""PPT""","SELECT Template_ID FROM Templates WHERE Template_Type_Code = ""PP"" OR Template_Type_Code = ""PPT""",CORRECT
cre_Doc_Template_Mgt,"SELECT count(*) FROM Templates WHERE template_type_code = ""CV""","SELECT count(*) FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code WHERE T2.Template_Type_Description = ""CV""",WRONG
cre_Doc_Template_Mgt,"SELECT count(*) FROM Templates WHERE template_type_code = ""CV""","SELECT count(*) FROM Templates WHERE Template_Type_Code = ""CV""",CORRECT
cre_Doc_Template_Mgt,"SELECT version_number , template_type_code FROM Templates WHERE version_number > 5","SELECT Version_Number , Template_Type_Code FROM Templates WHERE Version_Number > 5",CORRECT
cre_Doc_Template_Mgt,"SELECT version_number , template_type_code FROM Templates WHERE version_number > 5","SELECT Version_Number , Template_Type_Code FROM Templates WHERE Version_Number > 5",CORRECT
cre_Doc_Template_Mgt,"SELECT template_type_code , count(*) FROM Templates GROUP BY template_type_code","SELECT Ref_Template_Types.Template_Type_Code , count(*) FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code GROUP BY Ref_Template_Types.Template_Type_Code",CORRECT
cre_Doc_Template_Mgt,"SELECT template_type_code , count(*) FROM Templates GROUP BY template_type_code","SELECT Template_Type_Code , count(*) FROM Templates GROUP BY Template_Type_Code",CORRECT
cre_Doc_Template_Mgt,SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1,SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY count(*) DESC LIMIT 1,CORRECT
cre_Doc_Template_Mgt,SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1,SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code ORDER BY count(*) DESC LIMIT 1,CORRECT
cre_Doc_Template_Mgt,SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*) < 3,SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(*) < 3,CORRECT
cre_Doc_Template_Mgt,SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*) < 3,SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING count(*) < 3,CORRECT
cre_Doc_Template_Mgt,"SELECT min(Version_Number) , template_type_code FROM Templates","SELECT MIN(Version_Number), Template_Type_Code FROM Templates;",CORRECT
cre_Doc_Template_Mgt,"SELECT min(Version_Number) , template_type_code FROM Templates","SELECT Version_Number , Template_Type_Code FROM Templates ORDER BY Version_Number ASC LIMIT 1",CORRECT
cre_Doc_Template_Mgt,"SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id WHERE T2.document_name = ""Data base""","SELECT Template_Type_Code FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Document_Name = ""Data base""",CORRECT
cre_Doc_Template_Mgt,"SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id WHERE T2.document_name = ""Data base""","SELECT Template_Type_Code FROM Templates WHERE Template_ID = (SELECT Template_ID FROM Documents WHERE Document_Name = ""Data base"")",WRONG
cre_Doc_Template_Mgt,"SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id WHERE T1.template_type_code = ""BK""","SELECT Document_Name FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = ""BK""",CORRECT
cre_Doc_Template_Mgt,"SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id WHERE T1.template_type_code = ""BK""","SELECT t1.document_name FROM documents AS t1 JOIN templates AS t2 ON t1.template_id = t2.template_id WHERE t2.template_type_code = ""BK""",CORRECT
cre_Doc_Template_Mgt,"SELECT T1.template_type_code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code","SELECT Ref_Template_Types.Template_Type_Code, count(Documents.Template_ID) FROM Ref_Template_Types INNER JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Ref_Template_Types.Template_Type_Code",CORRECT
cre_Doc_Template_Mgt,"SELECT T1.template_type_code , count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code","SELECT Template_Type_Code , count(*) FROM Templates GROUP BY Template_Type_Code",WRONG
cre_Doc_Template_Mgt,SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1,"SELECT t1.Template_Type_Code, COUNT(t2.Template_ID) FROM Templates AS t1 JOIN Documents AS t2 ON t1.Template_ID = t2.Template_ID GROUP BY t1.Template_Type_Code ORDER BY COUNT(t2.Template_ID) DESC LIMIT 1",WRONG
cre_Doc_Template_Mgt,SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1,SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code IN ( SELECT Template_Type_Code FROM Templates WHERE Template_ID IN ( SELECT Template_ID FROM Documents GROUP BY Template_ID ORDER BY COUNT(*) DESC LIMIT 1 ) ),WRONG
cre_Doc_Template_Mgt,SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id,SELECT Template_Type_Code FROM Ref_Template_Types EXCEPT SELECT T1.Template_Type_Code FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID = T2.Template_ID,WRONG
cre_Doc_Template_Mgt,SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id,SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code NOT IN (SELECT Template_Type_Code FROM Templates),WRONG
cre_Doc_Template_Mgt,"SELECT template_type_code , template_type_description FROM Ref_template_types","SELECT Template_Type_Code , Template_Type_Description FROM Ref_Template_Types",CORRECT
cre_Doc_Template_Mgt,"SELECT template_type_code , template_type_description FROM Ref_template_types","SELECT Template_Type_Code , Template_Type_Description FROM Ref_Template_Types",CORRECT
cre_Doc_Template_Mgt,"SELECT template_type_description FROM Ref_template_types WHERE template_type_code = ""AD""",SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD',CORRECT
cre_Doc_Template_Mgt,"SELECT template_type_description FROM Ref_template_types WHERE template_type_code = ""AD""","SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = ""AD""",CORRECT
cre_Doc_Template_Mgt,"SELECT template_type_code FROM Ref_template_types WHERE template_type_description = ""Book""","SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = ""Book""",CORRECT
cre_Doc_Template_Mgt,"SELECT template_type_code FROM Ref_template_types WHERE template_type_description = ""Book""","SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = ""Book""",CORRECT
cre_Doc_Template_Mgt,SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID = T3.template_ID,SELECT DISTINCT Template_Type_Description FROM Ref_Template_Types NATURAL JOIN Templates NATURAL JOIN Documents,CORRECT
cre_Doc_Template_Mgt,SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID = T3.template_ID,SELECT DISTINCT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code IN (SELECT Template_Type_Code FROM Templates WHERE Template_ID IN (SELECT Template_ID FROM Documents)),WRONG
cre_Doc_Template_Mgt,"SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code = T2.template_type_code WHERE T1.template_type_description = ""Presentation""","SELECT Template_ID FROM Templates WHERE Template_Type_Code IN (SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = ""Presentation"")",CORRECT
cre_Doc_Template_Mgt,"SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code = T2.template_type_code WHERE T1.template_type_description = ""Presentation""",SELECT Template_ID FROM Templates WHERE Template_Type_Code = 'Presentation',WRONG
cre_Doc_Template_Mgt,SELECT count(*) FROM Paragraphs,SELECT count(*) FROM Paragraphs,CORRECT
cre_Doc_Template_Mgt,SELECT count(*) FROM Paragraphs,SELECT count(*) FROM Paragraphs,CORRECT
cre_Doc_Template_Mgt,SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID = T2.document_ID WHERE T2.document_name = 'Summer Show',"SELECT COUNT(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = ""Summer Show""",CORRECT
cre_Doc_Template_Mgt,SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID = T2.document_ID WHERE T2.document_name = 'Summer Show',"SELECT count(*) FROM Paragraphs AS t1 JOIN Documents AS t2 ON t1.Document_ID = t2.Document_ID WHERE t2.Document_Name = ""Summer Show""",CORRECT
cre_Doc_Template_Mgt,SELECT other_details from paragraphs where paragraph_text like 'korea',"SELECT Paragraph_Text, Other_Details FROM Paragraphs WHERE Paragraph_Text = ""Korea "";",WRONG
cre_Doc_Template_Mgt,SELECT other_details from paragraphs where paragraph_text like 'korea',"SELECT Paragraph_Text , Other_Details FROM Paragraphs WHERE Paragraph_Text LIKE ""%Korea%""",WRONG
cre_Doc_Template_Mgt,"SELECT T1.paragraph_id , T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.Document_Name = 'Welcome to NY'","SELECT Paragraph_ID , Paragraph_Text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = ""Welcome to NY""",CORRECT
cre_Doc_Template_Mgt,"SELECT T1.paragraph_id , T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.Document_Name = 'Welcome to NY'","SELECT Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID WHERE Documents.Document_Name = 'Welcome to NY'",CORRECT
cre_Doc_Template_Mgt,"SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = ""Customer reviews""","SELECT Paragraph_Text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T2.Document_Name = ""Customer reviews""",CORRECT
cre_Doc_Template_Mgt,"SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = ""Customer reviews""","SELECT Paragraph_Text FROM Paragraphs WHERE Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = ""Customer reviews"")",WRONG
cre_Doc_Template_Mgt,"SELECT document_id , count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id","SELECT Document_ID , COUNT(*) FROM Paragraphs GROUP BY Document_ID ORDER BY Document_ID",CORRECT
cre_Doc_Template_Mgt,"SELECT document_id , count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id","SELECT Document_ID , COUNT(*) FROM Paragraphs GROUP BY Document_ID ORDER BY Document_ID",CORRECT
cre_Doc_Template_Mgt,"SELECT T1.document_id , T2.document_name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id","SELECT Document_ID , Document_Name , COUNT(*) FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID",WRONG
cre_Doc_Template_Mgt,"SELECT T1.document_id , T2.document_name , count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id","SELECT Documents.Document_ID , Documents.Document_Name , count(*) FROM Documents JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID GROUP BY Documents.Document_ID",CORRECT
cre_Doc_Template_Mgt,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) >= 2,SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) >= 2,CORRECT
cre_Doc_Template_Mgt,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) >= 2,SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(*) >= 2,CORRECT
cre_Doc_Template_Mgt,"SELECT T1.document_id , T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1","SELECT Document_ID, Document_Name, COUNT(Paragraph_ID) AS Paragraph_Count FROM Documents JOIN Paragraphs ON Document_ID = Paragraph_ID GROUP BY Document_ID ORDER BY Paragraph_Count DESC LIMIT 1",WRONG
cre_Doc_Template_Mgt,"SELECT T1.document_id , T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1","SELECT Document_ID , Document_Name FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID ORDER BY count(*) DESC LIMIT 1",WRONG
cre_Doc_Template_Mgt,SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1,SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY count(*) LIMIT 1,CORRECT
cre_Doc_Template_Mgt,SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1,SELECT Document_ID FROM Paragraphs GROUP BY Document_ID ORDER BY count(*) ASC LIMIT 1,CORRECT
cre_Doc_Template_Mgt,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2,SELECT Document_ID FROM Paragraphs GROUP BY Document_ID HAVING COUNT(Paragraph_ID) BETWEEN 1 AND 2,CORRECT
cre_Doc_Template_Mgt,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2,SELECT Document_ID FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID GROUP BY T1.Document_ID HAVING COUNT(*) BETWEEN 1 AND 2,WRONG
cre_Doc_Template_Mgt,SELECT document_id FROM Paragraphs WHERE paragraph_text = 'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text = 'Ireland',"SELECT t1.document_id FROM paragraphs AS t1 JOIN documents AS t2 ON t1.document_id = t2.document_id WHERE t1.paragraph_text = ""Brazil"" INTERSECT SELECT t1.document_id FROM paragraphs AS t1 JOIN documents AS t2 ON t1.document_id = t2.document_id WHERE t1.paragraph_text = ""Ireland""",CORRECT
cre_Doc_Template_Mgt,SELECT document_id FROM Paragraphs WHERE paragraph_text = 'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text = 'Ireland',SELECT DISTINCT T1.Document_ID FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Paragraph_Text = 'Brazil' INTERSECT SELECT DISTINCT T1.Document_ID FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.Document_ID = T2.Document_ID WHERE T1.Paragraph_Text = 'Ireland',CORRECT
course_teach,SELECT count(*) FROM teacher,SELECT count(*) FROM teacher,CORRECT
course_teach,SELECT count(*) FROM teacher,SELECT count(*) FROM teacher,CORRECT
course_teach,SELECT Name FROM teacher ORDER BY Age ASC,SELECT Name FROM teacher ORDER BY Age ASC,CORRECT
course_teach,SELECT Name FROM teacher ORDER BY Age ASC,SELECT Name FROM teacher ORDER BY Age ASC,CORRECT
course_teach,"SELECT Age , Hometown FROM teacher","SELECT Age , Hometown FROM teacher",CORRECT
course_teach,"SELECT Age , Hometown FROM teacher","SELECT Age , Hometown FROM teacher",CORRECT
course_teach,"SELECT name from teacher where hometown != ""little lever urban district""","SELECT Name FROM teacher WHERE Hometown != ""Little Lever Urban District""",WRONG
course_teach,"SELECT name from teacher where hometown != ""little lever urban district""","SELECT Name FROM teacher WHERE Hometown != ""Little Lever Urban District""",WRONG
course_teach,SELECT Name FROM teacher WHERE Age = 32 OR Age = 33,SELECT Name FROM teacher WHERE Age = 32 OR Age = 33,CORRECT
course_teach,SELECT Name FROM teacher WHERE Age = 32 OR Age = 33,SELECT Name FROM teacher WHERE Age = 32 OR Age = 33,CORRECT
course_teach,SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1,SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1,CORRECT
course_teach,SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1,SELECT Hometown FROM teacher WHERE age = (SELECT min(age) FROM teacher),WRONG
course_teach,"SELECT Hometown , COUNT(*) FROM teacher GROUP BY Hometown","SELECT Hometown , COUNT(*) FROM teacher GROUP BY Hometown",CORRECT
course_teach,"SELECT Hometown , COUNT(*) FROM teacher GROUP BY Hometown","SELECT Hometown , COUNT(*) FROM teacher GROUP BY Hometown",CORRECT
course_teach,SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1,SELECT T2.Hometown FROM teacher AS T1 JOIN course_arrange AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC LIMIT 1,WRONG
course_teach,SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1,"SELECT Hometown , COUNT ( * ) FROM teacher GROUP BY Hometown ORDER BY COUNT ( * ) DESC LIMIT 1",WRONG
course_teach,SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) >= 2,SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) >= 2,CORRECT
course_teach,SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*) >= 2,SELECT Hometown FROM teacher GROUP BY Hometown HAVING count(*) >= 2,CORRECT
course_teach,"SELECT T3.Name , T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID","SELECT T1.Name , T2.Course FROM teacher AS T1 JOIN course_arrange AS T3 ON T1.Teacher_ID = T3.Teacher_ID JOIN course AS T2 ON T3.Course_ID = T2.Course_ID",CORRECT
course_teach,"SELECT T3.Name , T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID","SELECT T2.Name , T1.Course FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID",WRONG
course_teach,"SELECT T3.Name , T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID ORDER BY T3.Name","SELECT T2.Name , T1.Course FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID ORDER BY T2.Name",WRONG
course_teach,"SELECT T3.Name , T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID ORDER BY T3.Name","SELECT T2.Name , T1.Course FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID ORDER BY T2.Name",WRONG
course_teach,"SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID WHERE T2.Course = ""Math""","SELECT Name FROM teacher WHERE Teacher_ID = (SELECT Teacher_ID FROM course_arrange WHERE Course_ID = (SELECT Course_ID FROM course WHERE Course = ""Math""))",WRONG
course_teach,"SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID WHERE T2.Course = ""Math""","SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID WHERE T1.Course = ""math""",WRONG
course_teach,"SELECT T2.Name , COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name","SELECT T2.Name , count(T1.Teacher_ID) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Teacher_ID",WRONG
course_teach,"SELECT T2.Name , COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name","SELECT T2.Name , COUNT(T1.Teacher_ID) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name",CORRECT
course_teach,SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*) >= 2,SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T1.Teacher_ID HAVING Count(*) >= 2,WRONG
course_teach,SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*) >= 2,SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name HAVING Count(*) >= 2,CORRECT
course_teach,SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange),SELECT T1.Name FROM teacher AS T1 WHERE T1.Teacher_ID NOT IN (SELECT T2.Teacher_ID FROM course_arrange AS T2),CORRECT
course_teach,SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange),SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange),CORRECT
museum_visit,SELECT count(*) FROM visitor WHERE age < 30,SELECT count(*) FROM visitor WHERE age < 30;,CORRECT
museum_visit,SELECT name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC,SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC,CORRECT
museum_visit,SELECT avg(age) FROM visitor WHERE Level_of_membership <= 4,SELECT avg(Age) FROM visitor WHERE Level_of_membership <= 4,CORRECT
museum_visit,"SELECT name , Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY age DESC","SELECT Name, Level_of_membership FROM visitor WHERE Level_of_membership > 4 ORDER BY Age DESC",CORRECT
museum_visit,"SELECT museum_id , name FROM museum ORDER BY num_of_staff DESC LIMIT 1","SELECT Museum_ID , Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum)",CORRECT
museum_visit,SELECT avg(num_of_staff) FROM museum WHERE open_year < 2009,"SELECT avg(Num_of_Staff) FROM museum WHERE Open_Year < ""2009""",CORRECT
museum_visit,"SELECT Num_of_Staff , Open_Year FROM museum WHERE name = 'Plaza Museum'","SELECT Open_Year , Num_of_Staff FROM museum WHERE Name = ""Plaza Museum""",CORRECT
museum_visit,SELECT name FROM museum WHERE num_of_staff > (SELECT min(num_of_staff) FROM museum WHERE open_year > 2010),SELECT T1.Name FROM museum AS T1 JOIN (SELECT min(Num_of_Staff) AS min_staff FROM museum WHERE Open_Year > 2010) AS T2 ON T1.Num_of_Staff > T2.min_staff,CORRECT
museum_visit,"SELECT t1.id , t1.name , t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id GROUP BY t1.id HAVING count(*) > 1","SELECT T1.ID , T1.Name , T1.Age FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID GROUP BY T1.ID HAVING COUNT(*) > 1",CORRECT
museum_visit,"SELECT t2.visitor_id , t1.name , t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1","SELECT visitor_ID , visitor_name , membership_level FROM visitors JOIN visits ON visitor_ID = visitor_ID GROUP BY visitor_ID ORDER BY sum(total_spent) DESC LIMIT 1",WRONG
museum_visit,"SELECT t2.Museum_ID , t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID = t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1","SELECT T1.Museum_ID , T2.Name FROM visit AS T1 JOIN museum AS T2 ON T1.Museum_ID = T2.Museum_ID GROUP BY T1.Museum_ID ORDER BY count(*) DESC LIMIT 1",CORRECT
museum_visit,SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit),SELECT museum.Name FROM museum WHERE museum.Museum_ID NOT IN (SELECT visit.Museum_ID FROM visit),CORRECT
museum_visit,"SELECT t1.name , t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1","SELECT T1.Name , T1.Age FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID GROUP BY T1.ID ORDER BY max(T2.Num_of_Ticket) DESC LIMIT 1",CORRECT
museum_visit,"SELECT avg(num_of_ticket) , max(num_of_ticket) FROM visit","SELECT avg(Num_of_Ticket) , max(Num_of_Ticket) FROM visit",CORRECT
museum_visit,SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id WHERE t1.Level_of_membership = 1,SELECT T1.Total_spent FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID WHERE T1.Level_of_membership = 1,WRONG
museum_visit,SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID = t2.Museum_ID WHERE t3.open_year < 2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID = t2.Museum_ID WHERE t3.open_year > 2011,SELECT T1.Name FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID JOIN museum AS T3 ON T2.Museum_ID = T3.Museum_ID WHERE T3.Open_Year < 2009 INTERSECT SELECT T1.Name FROM visitor AS T1 JOIN visit AS T2 ON T1.ID = T2.visitor_ID JOIN museum AS T3 ON T2.Museum_ID = T3.Museum_ID WHERE T3.Open_Year > 2011,CORRECT
museum_visit,SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID = t2.Museum_ID WHERE t1.open_year > 2010),SELECT count(distinct visitor_ID) FROM visit WHERE visitor_ID NOT IN (SELECT visitor_ID FROM visit WHERE Museum_ID IN (SELECT Museum_ID FROM museum WHERE Open_Year > 2010)),WRONG
museum_visit,SELECT count(*) FROM museum WHERE open_year > 2013 OR open_year < 2008,"SELECT count(*) FROM museum WHERE Open_Year > ""2013"" OR Open_Year < ""2008""",CORRECT
wta_1,SELECT count(*) FROM players,SELECT COUNT(*) FROM players,CORRECT
wta_1,SELECT count(*) FROM players,SELECT COUNT(*) FROM players,CORRECT
wta_1,SELECT count(*) FROM matches,SELECT count(*) FROM matches,CORRECT
wta_1,SELECT count(*) FROM matches,SELECT count(*) FROM matches,CORRECT
wta_1,"SELECT first_name , birth_date FROM players WHERE country_code = 'USA'","SELECT first_name , birth_date FROM players WHERE country_code = ""USA""",CORRECT
wta_1,"SELECT first_name , birth_date FROM players WHERE country_code = 'USA'","SELECT first_name , birth_date FROM players WHERE country_code = 'USA'",CORRECT
wta_1,"SELECT avg(loser_age) , avg(winner_age) FROM matches","SELECT avg(loser_age) , avg(winner_age) FROM matches",CORRECT
wta_1,"SELECT avg(loser_age) , avg(winner_age) FROM matches","SELECT avg(loser_age) , avg(winner_age) FROM matches",CORRECT
wta_1,SELECT avg(winner_rank) FROM matches,SELECT avg(winner_rank) FROM matches,CORRECT
wta_1,SELECT avg(winner_rank) FROM matches,SELECT avg(winner_rank) FROM matches,CORRECT
wta_1,SELECT min(loser_rank) FROM matches,SELECT max(loser_rank) FROM matches,WRONG
wta_1,SELECT min(loser_rank) FROM matches,SELECT MIN(loser_rank) FROM matches,CORRECT
wta_1,SELECT count(DISTINCT country_code) FROM players,SELECT COUNT(DISTINCT country_code) FROM players,CORRECT
wta_1,SELECT count(DISTINCT country_code) FROM players,SELECT COUNT(DISTINCT country_code) FROM players,CORRECT
wta_1,SELECT count(DISTINCT loser_name) FROM matches,SELECT count(DISTINCT loser_name) FROM matches,CORRECT
wta_1,SELECT count(DISTINCT loser_name) FROM matches,SELECT count(DISTINCT loser_name) FROM matches,CORRECT
wta_1,SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*) > 10,SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*) > 10,CORRECT
wta_1,SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*) > 10,SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*) > 10,CORRECT
wta_1,SELECT winner_name FROM matches WHERE YEAR = 2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR = 2016,SELECT winner_name FROM matches WHERE year = 2013 INTERSECT SELECT winner_name FROM matches WHERE year = 2016,CORRECT
wta_1,SELECT winner_name FROM matches WHERE YEAR = 2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR = 2016,SELECT winner_name FROM matches WHERE year = 2013 INTERSECT SELECT winner_name FROM matches WHERE year = 2016,CORRECT
wta_1,SELECT count(*) FROM matches WHERE YEAR = 2013 OR YEAR = 2016,SELECT count(*) FROM matches WHERE year = 2013 OR year = 2016,CORRECT
wta_1,SELECT count(*) FROM matches WHERE YEAR = 2013 OR YEAR = 2016,SELECT count(*) FROM matches WHERE year = 2013 OR year = 2016,CORRECT
wta_1,"SELECT T1.country_code , T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'WTA Championships' INTERSECT SELECT T1.country_code , T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'Australian Open'","SELECT T1.country_code , T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'WTA Championships' INTERSECT SELECT T1.country_code , T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'Australian Open'",CORRECT
wta_1,"SELECT T1.country_code , T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'WTA Championships' INTERSECT SELECT T1.country_code , T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'Australian Open'","SELECT first_name, country_code FROM players WHERE player_id IN (SELECT winner_id FROM matches WHERE tourney_name = 'WTA Championships' AND year = 2015) INTERSECT SELECT first_name, country_code FROM players WHERE player_id IN (SELECT winner_id FROM matches WHERE tourney_name = 'Australian Open' AND year = 2015)",WRONG
wta_1,"SELECT first_name , country_code FROM players ORDER BY birth_date LIMIT 1","SELECT first_name , country_code FROM players ORDER BY birth_date LIMIT 1",CORRECT
wta_1,"SELECT first_name , country_code FROM players ORDER BY birth_date LIMIT 1","SELECT first_name, country_code FROM players ORDER BY birth_date ASC LIMIT 1",CORRECT
wta_1,"SELECT first_name , last_name FROM players ORDER BY birth_date","SELECT first_name , last_name FROM players ORDER BY birth_date",CORRECT
wta_1,"SELECT first_name , last_name FROM players ORDER BY birth_date",SELECT first_name || ' ' || last_name AS full_name FROM players ORDER BY birth_date,WRONG
wta_1,"SELECT first_name , last_name FROM players WHERE hand = 'L' ORDER BY birth_date","SELECT first_name , last_name FROM players WHERE hand = ""L"" OR hand = ""left"" ORDER BY birth_date",CORRECT
wta_1,"SELECT first_name , last_name FROM players WHERE hand = 'L' ORDER BY birth_date",SELECT first_name || ' ' || last_name AS full_name FROM players WHERE hand = 'L' ORDER BY birth_date,WRONG
wta_1,"SELECT T1.country_code , T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id ORDER BY T2.tours DESC LIMIT 1","SELECT T1.first_name , T1.country_code FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY sum(T2.tours) DESC LIMIT 1",WRONG
wta_1,"SELECT T1.country_code , T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id ORDER BY T2.tours DESC LIMIT 1","SELECT T1.first_name , T1.country_code FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY sum(tours) DESC LIMIT 1",WRONG
wta_1,SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,SELECT tourney_date FROM matches GROUP BY tourney_date ORDER BY count(*) DESC LIMIT 1,WRONG
wta_1,SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1,CORRECT
wta_1,"SELECT winner_name , winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1","SELECT winner_name , winner_rank_points FROM matches GROUP BY winner_id ORDER BY COUNT(*) DESC LIMIT 1",WRONG
wta_1,"SELECT winner_name , winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1","SELECT winner_name , winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",CORRECT
wta_1,SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1,SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1,CORRECT
wta_1,SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1,"SELECT winner_name FROM matches WHERE tourney_name = ""Australian Open"" AND winner_rank_points = (SELECT MAX(ranking_points) FROM rankings)",WRONG
wta_1,"SELECT winner_name , loser_name FROM matches ORDER BY minutes DESC LIMIT 1","SELECT T1.loser_name , T1.winner_name FROM matches AS T1 JOIN matches AS T2 ON T1.match_num = T2.match_num GROUP BY T1.match_num ORDER BY sum(minutes) DESC LIMIT 1",WRONG
wta_1,"SELECT winner_name , loser_name FROM matches ORDER BY minutes DESC LIMIT 1","SELECT T1.winner_name , T1.loser_name FROM matches AS T1 JOIN matches AS T2 ON T1.tourney_id = T2.tourney_id ORDER BY T1.minutes DESC LIMIT 1",CORRECT
wta_1,"SELECT avg(ranking) , T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name","SELECT avg(ranking) , first_name FROM rankings AS R1 JOIN players AS P1 ON R1.player_id = P1.player_id GROUP BY first_name",CORRECT
wta_1,"SELECT avg(ranking) , T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name","SELECT T1.first_name , avg(T2.ranking) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id",WRONG
wta_1,"SELECT sum(ranking_points) , T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name","SELECT T1.first_name , sum(T2.ranking_points) FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name",CORRECT
wta_1,"SELECT sum(ranking_points) , T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name","SELECT first_name , SUM(ranking_points) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY first_name",CORRECT
wta_1,"SELECT count(*) , country_code FROM players GROUP BY country_code","SELECT country_code, count(*) FROM players GROUP BY country_code",CORRECT
wta_1,"SELECT count(*) , country_code FROM players GROUP BY country_code","SELECT country_code , COUNT(*) FROM players GROUP BY country_code",CORRECT
wta_1,SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,"SELECT country_code , count(*) FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",WRONG
wta_1,SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,CORRECT
wta_1,SELECT country_code FROM players GROUP BY country_code HAVING count(*) > 50,SELECT country_code FROM players GROUP BY country_code HAVING count(*) > 50,CORRECT
wta_1,SELECT country_code FROM players GROUP BY country_code HAVING count(*) > 50,"SELECT country_code, count(*) FROM players GROUP BY country_code HAVING count(*) > 50",WRONG
wta_1,"SELECT sum(tours) , ranking_date FROM rankings GROUP BY ranking_date","SELECT ""ranking_date"" , count(*) FROM rankings GROUP BY ""ranking_date""",WRONG
wta_1,"SELECT sum(tours) , ranking_date FROM rankings GROUP BY ranking_date","SELECT ranking_date , SUM(tours) FROM rankings GROUP BY ranking_date",CORRECT
wta_1,"SELECT count(*) , YEAR FROM matches GROUP BY YEAR","SELECT year , count(*) FROM matches GROUP BY year",CORRECT
wta_1,"SELECT count(*) , YEAR FROM matches GROUP BY YEAR","SELECT year , COUNT(*) FROM matches GROUP BY year",CORRECT
wta_1,"SELECT DISTINCT winner_name , winner_rank FROM matches ORDER BY winner_age LIMIT 3","SELECT winner_name, winner_rank FROM matches WHERE winner_age = (SELECT MIN(winner_age) FROM matches) LIMIT 3",WRONG
wta_1,"SELECT DISTINCT winner_name , winner_rank FROM matches ORDER BY winner_age LIMIT 3","SELECT winner_name, winner_rank FROM matches ORDER BY winner_age LIMIT 3",CORRECT
wta_1,SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L',SELECT count(DISTINCT winner_id) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships',CORRECT
wta_1,SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L',SELECT count(*) FROM matches AS T1 JOIN players AS T2 ON T1.winner_id = T2.player_id WHERE T2.hand = 'L' AND T1.tourney_name = 'WTA Championships',WRONG
wta_1,"SELECT T1.first_name , T1.country_code , T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1","SELECT T1.first_name , T1.country_code , T1.birth_date FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id JOIN matches AS T3 ON T2.player_id = T3.winner_id ORDER BY T2.ranking_points DESC LIMIT 1",WRONG
wta_1,"SELECT T1.first_name , T1.country_code , T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1","SELECT T1.first_name , T1.country_code , T1.birth_date FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY sum(ranking_points) DESC LIMIT 1",WRONG
wta_1,"SELECT count(*) , hand FROM players GROUP BY hand","SELECT hand, count(*) FROM players GROUP BY hand",CORRECT
wta_1,"SELECT count(*) , hand FROM players GROUP BY hand","SELECT hand, count(*) FROM players GROUP BY hand",CORRECT
battle_death,SELECT count(*) FROM ship WHERE disposition_of_ship = 'Captured',"SELECT count(*) FROM ship WHERE disposition_of_ship = ""Captured""",CORRECT
battle_death,"SELECT name , tonnage FROM ship ORDER BY name DESC","SELECT name, tonnage FROM ship ORDER BY name DESC",CORRECT
battle_death,"SELECT name , date FROM battle","SELECT name , date , result FROM battle",WRONG
battle_death,"SELECT max(killed) , min(killed) FROM death","SELECT max(death_toll) , min(death_toll) FROM battle",WRONG
battle_death,SELECT avg(injured) FROM death,SELECT avg(injured) FROM death,CORRECT
battle_death,"SELECT T1.killed , T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id = T2.id WHERE T2.tonnage = 't'","SELECT death.id, death.note, death.killed, death.injured, ship.name, ship.tonnage, ship.ship_type, ship.location, ship.disposition_of_ship FROM death JOIN ship ON death.caused_by_ship_id = ship.id WHERE ship.tonnage = 't'",WRONG
battle_death,"SELECT name , RESULT FROM battle WHERE bulgarian_commander != 'Boril'","SELECT name , result FROM battle WHERE bulgarian_commander != 'Boril'",CORRECT
battle_death,"SELECT DISTINCT T1.id , T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.ship_type = 'Brig'","SELECT DISTINCT id , name FROM battle WHERE id IN (SELECT lost_in_battle FROM ship WHERE ship_type = 'Brig')",WRONG
battle_death,"SELECT T1.id , T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle JOIN death AS T3 ON T2.id = T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed) > 10","SELECT T1.id, T1.name FROM battle AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id GROUP BY T1.id, T1.name HAVING SUM(T2.killed) > 10",WRONG
battle_death,"SELECT T2.id , T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id = T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1","SELECT T1.id, T1.name, SUM(T2.injured) FROM ship AS T1 JOIN death AS T2 ON T1.id = T2.caused_by_ship_id GROUP BY T1.id ORDER BY SUM(T2.injured) DESC LIMIT 1",WRONG
battle_death,SELECT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I',SELECT DISTINCT name FROM battle WHERE (bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I') OR (bulgarian_commander = 'Baldwin I' AND latin_commander = 'Kaloyan'),CORRECT
battle_death,SELECT count(DISTINCT RESULT) FROM battle,SELECT count(DISTINCT result) FROM battle,CORRECT
battle_death,SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage = '225' );,"SELECT battle.id, battle.name, battle.date, battle.bulgarian_commander, battle.latin_commander, battle.result, ship.id, ship.name, ship.tonnage, ship.ship_type, ship.location, ship.disposition_of_ship, death.id, death.note, death.killed, death.injured FROM battle LEFT JOIN ship ON battle.id = ship.lost_in_battle LEFT JOIN death ON ship.id = death.caused_by_ship_id WHERE ship.tonnage != '225' GROUP BY battle.id HAVING COUNT(ship.id) = 0",WRONG
battle_death,"SELECT T1.name , T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.name = 'Lettice' INTERSECT SELECT T1.name , T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.name = 'HMS Atalanta'","SELECT T1.name , T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.name = 'Lettice' OR T2.name = 'HMS Atalanta'",WRONG
battle_death,"SELECT name , RESULT , bulgarian_commander FROM battle EXCEPT SELECT T1.name , T1.result , T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.location = 'English Channel'","SELECT battle.name, battle.result, battle.bulgarian_commander FROM battle LEFT JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.location = 'English Channel'",WRONG
battle_death,SELECT note FROM death WHERE note LIKE '%East%',SELECT note FROM death WHERE note LIKE '%East%',CORRECT
student_transcripts_tracking,"SELECT line_1 , line_2 FROM addresses","SELECT line_1 , line_2 FROM Addresses",CORRECT
student_transcripts_tracking,"SELECT line_1 , line_2 FROM addresses","SELECT line_1 , line_2 FROM Addresses",CORRECT
student_transcripts_tracking,SELECT count(*) FROM Courses,SELECT COUNT(*) FROM Courses,CORRECT
student_transcripts_tracking,SELECT count(*) FROM Courses,SELECT COUNT(*) FROM Courses,CORRECT
student_transcripts_tracking,SELECT course_description FROM Courses WHERE course_name = 'math',"SELECT course_description FROM Courses WHERE course_name = ""Math""",WRONG
student_transcripts_tracking,SELECT course_description FROM Courses WHERE course_name = 'math',SELECT course_description FROM Courses WHERE course_name LIKE 'Math%',WRONG
student_transcripts_tracking,SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea',"SELECT zip_postcode FROM Addresses WHERE city = ""Port Chelsea""",CORRECT
student_transcripts_tracking,SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea',"SELECT zip_postcode FROM Addresses WHERE city = ""Port Chelsea""",CORRECT
student_transcripts_tracking,"SELECT T2.department_name , T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1","SELECT department_name , department_id FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",WRONG
student_transcripts_tracking,"SELECT t2.department_name , t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id = t2.department_id group by t1.department_id order by count(*) desc limit 1","SELECT department_name , department_id FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",WRONG
student_transcripts_tracking,SELECT count(DISTINCT department_id) FROM Degree_Programs,SELECT COUNT(DISTINCT department_id) FROM Degree_Programs,CORRECT
student_transcripts_tracking,SELECT count(DISTINCT department_id) FROM Degree_Programs,SELECT count(DISTINCT department_id) FROM degree_programs,CORRECT
student_transcripts_tracking,SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs,SELECT COUNT(DISTINCT degree_summary_name) FROM Degree_Programs,CORRECT
student_transcripts_tracking,SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs,SELECT count(*) FROM Degree_Programs,CORRECT
student_transcripts_tracking,SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id WHERE T1.department_name = 'engineer',SELECT count(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = 'Engineering'),WRONG
student_transcripts_tracking,SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id WHERE T1.department_name = 'engineer',"SELECT COUNT(*) FROM Degree_Programs WHERE department_id = (SELECT department_id FROM Departments WHERE department_name = ""Engineering"")",WRONG
student_transcripts_tracking,"SELECT section_name , section_description FROM Sections","SELECT T1.section_name , T1.section_description FROM Sections AS T1",CORRECT
student_transcripts_tracking,"SELECT section_name , section_description FROM Sections","SELECT section_name , section_description FROM Sections",CORRECT
student_transcripts_tracking,"SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING count(*) <= 2","SELECT course_name, course_id FROM Courses WHERE course_id IN (SELECT course_id FROM Sections GROUP BY course_id HAVING count(*) <= 2)",CORRECT
student_transcripts_tracking,"SELECT T1.course_name , T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING count(*) <= 2","SELECT course_name , course_id FROM Courses WHERE course_id NOT IN (SELECT course_id FROM Sections GROUP BY course_id HAVING COUNT(*) >= 2)",WRONG
student_transcripts_tracking,SELECT section_name FROM Sections ORDER BY section_name DESC,SELECT section_name FROM Sections ORDER BY section_name DESC,CORRECT
student_transcripts_tracking,SELECT section_name FROM Sections ORDER BY section_name DESC,SELECT section_name FROM sections ORDER BY section_name DESC,CORRECT
student_transcripts_tracking,"SELECT T1.semester_name , T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.semester_name , T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",CORRECT
student_transcripts_tracking,"SELECT T1.semester_name , T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.semester_name , T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY COUNT(*) DESC LIMIT 1",CORRECT
student_transcripts_tracking,SELECT department_description FROM Departments WHERE department_name LIKE '%computer%',SELECT department_description FROM Departments WHERE department_name LIKE '%Computer%',CORRECT
student_transcripts_tracking,SELECT department_description FROM Departments WHERE department_name LIKE '%computer%',SELECT department_description FROM Departments WHERE department_name LIKE '%computer%',CORRECT
student_transcripts_tracking,"SELECT T1.first_name , T1.middle_name , T1.last_name , T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING count(*) = 2","SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) = 2",CORRECT
student_transcripts_tracking,"SELECT T1.first_name , T1.middle_name , T1.last_name , T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING count(*) = 2","SELECT T1.first_name , T1.middle_name , T1.last_name , T1.student_id FROM students AS T1 JOIN student_enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING count(*) > 1",WRONG
student_transcripts_tracking,"SELECT DISTINCT T1.first_name , T1.middle_name , T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelor'","SELECT T2.first_name , T2.middle_name , T2.last_name FROM Student_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T1.degree_program_id = ( SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name = ""Bachelor"" )",WRONG
student_transcripts_tracking,"SELECT DISTINCT T1.first_name , T1.middle_name , T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelor'","SELECT T1.first_name , T1.middle_name , T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelors'",WRONG
student_transcripts_tracking,SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1,SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY COUNT(*) DESC LIMIT 1,CORRECT
student_transcripts_tracking,SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1,SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY COUNT(*) DESC LIMIT 1,CORRECT
student_transcripts_tracking,"SELECT T1.degree_program_id , T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1","SELECT t1.degree_program_id , t1.degree_summary_name FROM Degree_Programs AS t1 JOIN Student_Enrolment AS t2 ON t1.degree_program_id = t2.degree_program_id GROUP BY t1.degree_program_id ORDER BY COUNT(*) DESC LIMIT 1",CORRECT
student_transcripts_tracking,"SELECT T1.degree_program_id , T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.degree_program_id , T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY COUNT(*) DESC LIMIT 1",CORRECT
student_transcripts_tracking,"SELECT T1.student_id , T1.first_name , T1.middle_name , T1.last_name , count(*) , T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.student_id, T2.first_name, T2.middle_name, T2.last_name, COUNT(T1.student_enrolment_id) AS enrollments, T1.student_id FROM Student_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY enrollments DESC LIMIT 1",CORRECT
student_transcripts_tracking,"SELECT T1.student_id , T1.first_name , T1.middle_name , T1.last_name , count(*) , T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.first_name , T1.middle_name , T1.last_name , T1.student_id , COUNT(*) FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1",WRONG
student_transcripts_tracking,SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment ),SELECT semester_name FROM Semesters WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment),CORRECT
student_transcripts_tracking,SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment ),SELECT semester_name FROM Semesters WHERE semester_id NOT IN (SELECT semester_id FROM Student_Enrolment),CORRECT
student_transcripts_tracking,SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id,SELECT course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id,CORRECT
student_transcripts_tracking,SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id,SELECT course_name FROM Courses WHERE course_id IN (SELECT course_id FROM Student_Enrolment_Courses),WRONG
student_transcripts_tracking,SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1,SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1,CORRECT
student_transcripts_tracking,SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1,SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1,CORRECT
student_transcripts_tracking,SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = 'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id = T4.student_id,SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = 'North Carolina' AND T1.student_id NOT IN (SELECT T3.student_id FROM Student_Enrolment AS T3),WRONG
student_transcripts_tracking,SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = 'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id = T4.student_id,"SELECT T1.last_name FROM Students AS T1 LEFT JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id WHERE T2.student_id IS NULL AND T1.permanent_address_id IN (SELECT address_id FROM Addresses WHERE state_province_county = ""North Carolina"")",WRONG
student_transcripts_tracking,"SELECT T2.transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING count(*) >= 2","SELECT transcript_date , transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING count(*) >= 2",WRONG
student_transcripts_tracking,"SELECT T2.transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING count(*) >= 2","SELECT transcript_date , transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING count(*) > 2",WRONG
student_transcripts_tracking,SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward',"SELECT phone FROM people WHERE first_name = ""Timmothy"" AND last_name = ""Ward""",WRONG
student_transcripts_tracking,SELECT cell_mobile_number from students where first_name = 'timmothy' and last_name = 'ward',"SELECT cell_mobile_number FROM Students WHERE first_name = ""Timmothy"" AND last_name = ""Ward""",WRONG
student_transcripts_tracking,"SELECT first_name , middle_name , last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1","SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered LIMIT 1",CORRECT
student_transcripts_tracking,"SELECT first_name , middle_name , last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1","SELECT first_name , middle_name , last_name FROM Students ORDER BY date_first_registered LIMIT 1",CORRECT
student_transcripts_tracking,"SELECT first_name , middle_name , last_name FROM Students ORDER BY date_left ASC LIMIT 1","SELECT s.first_name, s.middle_name, s.last_name FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id JOIN Semesters sm ON se.semester_id = sm.semester_id WHERE sm.semester_name = 'Graduation' ORDER BY s.date_first_registered ASC LIMIT 1",WRONG
student_transcripts_tracking,"SELECT first_name , middle_name , last_name FROM Students ORDER BY date_left ASC LIMIT 1","SELECT first_name , middle_name , last_name FROM Students WHERE date_left = (SELECT MIN(date_left ) FROM Students )",WRONG
student_transcripts_tracking,SELECT first_name FROM Students WHERE current_address_id != permanent_address_id,SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id = T2.address_id JOIN Addresses AS T3 ON T1.current_address_id = T3.address_id WHERE T2.line_1 != T3.line_1,WRONG
student_transcripts_tracking,SELECT first_name FROM Students WHERE current_address_id != permanent_address_id,SELECT first_name FROM Students WHERE current_address_id != permanent_address_id,CORRECT
student_transcripts_tracking,"SELECT T1.address_id , T1.line_1 , T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.address_id, T1.line_1, T1.line_2, T1.line_3, T1.city, T1.zip_postcode, T1.state_province_county, T1.country, T1.other_address_details FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.current_address_id GROUP BY T1.address_id ORDER BY COUNT(*) DESC LIMIT 1",WRONG
student_transcripts_tracking,"SELECT T1.address_id , T1.line_1 , T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.address_id , T1.line_1 , T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",CORRECT
student_transcripts_tracking,SELECT avg(transcript_date) FROM Transcripts,SELECT AVG(transcript_date) FROM Transcripts,CORRECT
student_transcripts_tracking,SELECT avg(transcript_date) FROM Transcripts,SELECT avg(transcript_date) FROM Transcripts,CORRECT
student_transcripts_tracking,"SELECT transcript_date , other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1","SELECT transcript_date , other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",CORRECT
student_transcripts_tracking,"SELECT transcript_date , other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1","SELECT MIN(transcript_date) , other_details FROM Transcripts",CORRECT
student_transcripts_tracking,SELECT count(*) FROM Transcripts,SELECT count(*) FROM Transcripts,CORRECT
student_transcripts_tracking,SELECT count(*) FROM Transcripts,SELECT count(*) FROM Transcripts,CORRECT
student_transcripts_tracking,SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1,SELECT max(transcript_date) FROM Transcripts,CORRECT
student_transcripts_tracking,SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1,SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1,CORRECT
student_transcripts_tracking,"SELECT count(*) , student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.student_course_id , COUNT(*) FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.student_course_id",WRONG
student_transcripts_tracking,"SELECT count(*) , student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1","SELECT student_course_id, COUNT(student_course_id) AS count FROM Transcript_Contents GROUP BY student_course_id ORDER BY count DESC LIMIT 1",CORRECT
student_transcripts_tracking,"SELECT T2.transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1","SELECT transcript_date , transcript_id FROM Transcripts WHERE transcript_id IN (SELECT transcript_id FROM Transcript_Contents GROUP BY transcript_id ORDER BY COUNT(*) ASC LIMIT 1)",CORRECT
student_transcripts_tracking,"SELECT T2.transcript_date , T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1","SELECT T1.transcript_date , T1.transcript_id FROM Transcripts AS T1 JOIN Transcript_Contents AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",CORRECT
student_transcripts_tracking,SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE degree_summary_name = 'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE degree_summary_name = 'Bachelor',SELECT DISTINCT semester_name FROM Student_Enrolment AS T1 JOIN Semesters AS T2 ON T1.semester_id = T2.semester_id WHERE T1.degree_program_id = (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name = 'Master') INTERSECT SELECT DISTINCT semester_name FROM Student_Enrolment AS T1 JOIN Semesters AS T2 ON T1.semester_id = T2.semester_id WHERE T1.degree_program_id = (SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name = 'Bachelor'),WRONG
student_transcripts_tracking,SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE degree_summary_name = 'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE degree_summary_name = 'Bachelor',SELECT T1.semester_id FROM Student_Enrolment AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id WHERE T1.degree_program_id = 1 AND T2.degree_program_id = 2,WRONG
student_transcripts_tracking,SELECT count(DISTINCT current_address_id) FROM Students,SELECT count(DISTINCT current_address_id) FROM Students,CORRECT
student_transcripts_tracking,SELECT count(DISTINCT current_address_id) FROM Students,"SELECT DISTINCT T1.line_1, T1.line_2, T1.line_3, T1.city, T1.zip_postcode, T1.state_province_county, T1.country, T1.other_address_details FROM Addresses AS T1 JOIN People_Addresses AS T2 ON T1.address_id = T2.address_id JOIN Students AS T3 ON T2.person_id = T3.student_id",WRONG
student_transcripts_tracking,SELECT other_student_details FROM Students ORDER BY other_student_details DESC,SELECT * FROM Students ORDER BY last_name DESC,WRONG
student_transcripts_tracking,SELECT other_student_details FROM Students ORDER BY other_student_details DESC,SELECT other_student_details FROM Students ORDER BY other_student_details DESC,CORRECT
student_transcripts_tracking,SELECT section_description FROM Sections WHERE section_name = 'h',SELECT * FROM Sections WHERE section_id = 'h',WRONG
student_transcripts_tracking,SELECT section_description FROM Sections WHERE section_name = 'h',"SELECT section_description FROM Sections WHERE section_name = ""h"";",CORRECT
student_transcripts_tracking,SELECT t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id = t2.address_id where t2.country = 'haiti' or t1.cell_mobile_number = '09700166582',SELECT T1.first_name FROM Students AS T1 WHERE T1.permanent_address_id IN (SELECT T2.address_id FROM Addresses AS T2 WHERE T2.country = 'Haiti') OR T1.cell_mobile_number = '09700166582',WRONG
student_transcripts_tracking,SELECT t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id = t2.address_id where t2.country = 'haiti' or t1.cell_mobile_number = '09700166582',SELECT T1.first_name FROM Students AS T1 WHERE T1.permanent_address_id IN (SELECT T2.address_id FROM Addresses AS T2 WHERE T2.country = 'Haiti') OR T1.cell_mobile_number = '09700166582',WRONG
tvshow,SELECT Title FROM Cartoon ORDER BY title,SELECT Title FROM Cartoon ORDER BY Title,CORRECT
tvshow,SELECT Title FROM Cartoon ORDER BY title,SELECT Title FROM Cartoon ORDER BY Title,CORRECT
tvshow,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"";","SELECT * FROM Cartoon WHERE Directed_by = ""Ben Jones""",WRONG
tvshow,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"";",SELECT T1.Title FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Directed_by = 'Ben Jones',CORRECT
tvshow,"SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr"";","SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr""",CORRECT
tvshow,"SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr"";",SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr',CORRECT
tvshow,"SELECT title , Directed_by FROM Cartoon ORDER BY Original_air_date","SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date",CORRECT
tvshow,"SELECT title , Directed_by FROM Cartoon ORDER BY Original_air_date","SELECT Title , Directed_by FROM Cartoon ORDER BY Original_air_date",CORRECT
tvshow,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"" OR Directed_by = ""Brandon Vietti"";","SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"" OR Directed_by = ""Brandon Vietti""",CORRECT
tvshow,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"" OR Directed_by = ""Brandon Vietti"";",SELECT T1.Title FROM Cartoon AS T1 WHERE T1.Directed_by = 'Ben Jones' OR T1.Directed_by = 'Brandon Vietti',CORRECT
tvshow,"SELECT Country , count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;","SELECT Country , count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1",CORRECT
tvshow,"SELECT Country , count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;","SELECT Country , COUNT(*) FROM TV_Channel GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1",CORRECT
tvshow,"SELECT count(DISTINCT series_name) , count(DISTINCT content) FROM TV_Channel;","SELECT COUNT(DISTINCT series_name) , COUNT(DISTINCT Content) FROM TV_Channel",CORRECT
tvshow,"SELECT count(DISTINCT series_name) , count(DISTINCT content) FROM TV_Channel;","SELECT count(DISTINCT series_name), count(DISTINCT Content) FROM TV_Channel",CORRECT
tvshow,"SELECT Content FROM TV_Channel WHERE series_name = ""Sky Radio"";","SELECT Content FROM TV_Channel WHERE series_name = ""Sky Radio""",CORRECT
tvshow,"SELECT Content FROM TV_Channel WHERE series_name = ""Sky Radio"";","SELECT Content FROM TV_Channel WHERE series_name = ""Sky Radio""",CORRECT
tvshow,"SELECT Package_Option FROM TV_Channel WHERE series_name = ""Sky Radio"";","SELECT Package_Option FROM TV_Channel WHERE series_name = ""Sky Radio""",CORRECT
tvshow,"SELECT Package_Option FROM TV_Channel WHERE series_name = ""Sky Radio"";","SELECT Package_Option FROM TV_Channel WHERE series_name = ""Sky Radio""",CORRECT
tvshow,"SELECT count(*) FROM TV_Channel WHERE LANGUAGE = ""English"";",SELECT count(*) FROM TV_Channel WHERE Language = 'English',CORRECT
tvshow,"SELECT count(*) FROM TV_Channel WHERE LANGUAGE = ""English"";",SELECT count(*) FROM TV_Channel WHERE Language = 'English',CORRECT
tvshow,"SELECT LANGUAGE , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;","SELECT Language , count(*) FROM TV_Channel GROUP BY Language ORDER BY count(*) ASC LIMIT 1;",CORRECT
tvshow,"SELECT LANGUAGE , count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;","SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language ORDER BY COUNT(*) ASC LIMIT 1",CORRECT
tvshow,"SELECT LANGUAGE , count(*) FROM TV_Channel GROUP BY LANGUAGE","SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language",CORRECT
tvshow,"SELECT LANGUAGE , count(*) FROM TV_Channel GROUP BY LANGUAGE","SELECT Language, COUNT(*) FROM TV_Channel GROUP BY Language",CORRECT
tvshow,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = ""The Rise of the Blue Beetle!"";","SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Title = ""The Rise of the Blue Beetle!""",CORRECT
tvshow,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = ""The Rise of the Blue Beetle!"";","SELECT T1.series_name FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Title = ""The Rise of the Blue Beetle""",WRONG
tvshow,"SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";","SELECT T1.Title FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.Series_name = ""Sky Radio""",CORRECT
tvshow,"SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";","SELECT Title FROM Cartoon AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = ""Sky Radio""",CORRECT
tvshow,SELECT Episode FROM TV_series ORDER BY rating,SELECT Episode FROM TV_series ORDER BY Rating,CORRECT
tvshow,SELECT Episode FROM TV_series ORDER BY rating,SELECT Episode FROM TV_series ORDER BY Rating,CORRECT
tvshow,"SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;","SELECT T1.Episode , T1.Rating FROM TV_series AS T1 ORDER BY T1.Rating DESC LIMIT 3",CORRECT
tvshow,"SELECT Episode , Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;","SELECT T1.Episode , T1.Rating FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id ORDER BY T1.Rating DESC LIMIT 3",CORRECT
tvshow,"SELECT max(SHARE) , min(SHARE) FROM TV_series;","SELECT min(Share) , max(Share) FROM TV_series",CORRECT
tvshow,"SELECT max(SHARE) , min(SHARE) FROM TV_series;","SELECT max(Share) , min(Share) FROM TV_series",CORRECT
tvshow,"SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime"";","SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime""",CORRECT
tvshow,"SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime"";","SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime""",CORRECT
tvshow,"SELECT Weekly_Rank FROM TV_series WHERE Episode = ""A Love of a Lifetime"";","SELECT ""Weekly_Rank"" FROM ""TV_series"" WHERE ""Episode"" = ""A Love of a Lifetime""",CORRECT
tvshow,"SELECT Weekly_Rank FROM TV_series WHERE Episode = ""A Love of a Lifetime"";","SELECT ""Weekly_Rank"" FROM ""TV_series"" WHERE ""Episode"" = ""A Love of a Lifetime""",CORRECT
tvshow,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = ""A Love of a Lifetime"";","SELECT TV_Channel.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_series.Episode = ""A Love of a Lifetime""",CORRECT
tvshow,"SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = ""A Love of a Lifetime"";","SELECT T1.series_name FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T1.Episode = ""A Love of a Lifetime""",WRONG
tvshow,"SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";","SELECT Episode FROM TV_series AS T1 JOIN TV_Channel AS T2 ON T1.Channel = T2.id WHERE T2.series_name = ""Sky Radio""",CORRECT
tvshow,"SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";","SELECT Episode FROM TV_series WHERE Series_name = ""Sky Radio""",WRONG
tvshow,"SELECT count(*) , Directed_by FROM cartoon GROUP BY Directed_by","SELECT Directed_by , count(*) FROM Cartoon GROUP BY Directed_by",CORRECT
tvshow,"SELECT count(*) , Directed_by FROM cartoon GROUP BY Directed_by",SELECT COUNT(DISTINCT T1.id) FROM Cartoon AS T1 JOIN Cartoon AS T2 ON T1.directed_by = T2.directed_by WHERE T1.id != T2.id GROUP BY T1.directed_by,WRONG
tvshow,"SELECT production_code , channel from cartoon order by original_air_date desc limit 1","SELECT production_code , channel FROM Cartoon ORDER BY original_air_date DESC LIMIT 1",CORRECT
tvshow,"SELECT production_code , channel from cartoon order by original_air_date desc limit 1","SELECT Production_code , Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1",CORRECT
tvshow,"SELECT package_option , series_name FROM TV_Channel WHERE hight_definition_TV = ""yes""","SELECT Package_Option , series_name FROM TV_Channel WHERE Hight_definition_TV = 'Yes'",WRONG
tvshow,"SELECT package_option , series_name FROM TV_Channel WHERE hight_definition_TV = ""yes""","SELECT Package_Option , series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.Hight_definition_TV = 'Yes'",WRONG
tvshow,SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by = 'Todd Casey',SELECT DISTINCT Country FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey'),WRONG
tvshow,SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by = 'Todd Casey',"SELECT DISTINCT Country FROM Cartoon WHERE Written_by = ""Todd Casey""",WRONG
tvshow,SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by = 'Todd Casey',"SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = ""Todd Casey"")",WRONG
tvshow,SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by = 'Todd Casey',SELECT DISTINCT Country FROM TV_Channel EXCEPT SELECT DISTINCT Country FROM Cartoon WHERE Written_by = 'Todd Casey',WRONG
tvshow,"SELECT T1.series_name , T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by = 'Michael Chang' INTERSECT SELECT T1.series_name , T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by = 'Ben Jones'","SELECT T1.series_name, T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by = ""Ben Jones"" AND T2.Directed_by = ""Michael Chang""",WRONG
tvshow,"SELECT T1.series_name , T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by = 'Michael Chang' INTERSECT SELECT T1.series_name , T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by = 'Ben Jones'","SELECT T1.series_name , T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by = ""Ben Jones"" INTERSECT SELECT T1.series_name , T1.Country FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Directed_by = ""Michael Chang""",CORRECT
tvshow,"SELECT Pixel_aspect_ratio_PAR , country FROM tv_channel WHERE LANGUAGE != 'English'","SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != ""English""",CORRECT
tvshow,"SELECT Pixel_aspect_ratio_PAR , country FROM tv_channel WHERE LANGUAGE != 'English'","SELECT Pixel_aspect_ratio_PAR , Country FROM TV_Channel WHERE Language != ""English""",CORRECT
tvshow,SELECT id FROM tv_channel GROUP BY country HAVING count(*) > 2,SELECT TV_Channel.id FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel GROUP BY TV_Channel.id HAVING COUNT(*) > 2,WRONG
tvshow,SELECT id FROM tv_channel GROUP BY country HAVING count(*) > 2,SELECT id FROM TV_Channel GROUP BY id HAVING count(*) > 2,WRONG
tvshow,SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones',SELECT Channel FROM Cartoon WHERE Directed_by != 'Ben Jones' EXCEPT SELECT Channel FROM TV_series,WRONG
tvshow,SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones',"SELECT TV_Channel.id FROM TV_Channel LEFT JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by = ""Ben Jones""",WRONG
tvshow,SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones'),"SELECT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = ""Ben Jones"")",CORRECT
tvshow,SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones'),SELECT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones'),CORRECT
poker_player,SELECT count(*) FROM poker_player,SELECT count(*) FROM poker_player,CORRECT
poker_player,SELECT count(*) FROM poker_player,SELECT count(*) FROM poker_player,CORRECT
poker_player,SELECT Earnings FROM poker_player ORDER BY Earnings DESC,SELECT Earnings FROM poker_player ORDER BY Earnings DESC,CORRECT
poker_player,SELECT Earnings FROM poker_player ORDER BY Earnings DESC,SELECT Earnings FROM poker_player ORDER BY Earnings DESC,CORRECT
poker_player,"SELECT Final_Table_Made , Best_Finish FROM poker_player","SELECT Final_Table_Made , Best_Finish FROM poker_player",CORRECT
poker_player,"SELECT Final_Table_Made , Best_Finish FROM poker_player","SELECT Final_Table_Made , Best_Finish FROM poker_player",CORRECT
poker_player,SELECT avg(Earnings) FROM poker_player,SELECT AVG(poker_player.Earnings) FROM poker_player,CORRECT
poker_player,SELECT avg(Earnings) FROM poker_player,SELECT avg(Earnings) FROM poker_player,CORRECT
poker_player,SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1,SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1,CORRECT
poker_player,SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1,SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1,CORRECT
poker_player,SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000,SELECT MAX(Final_Table_Made) FROM poker_player WHERE Earnings < 200000,CORRECT
poker_player,SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000,SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings < 200000,CORRECT
poker_player,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID,SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID,CORRECT
poker_player,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID,SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID,CORRECT
poker_player,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000,CORRECT
poker_player,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Earnings > 300000,CORRECT
poker_player,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made,SELECT people.Name FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Final_Table_Made ASC,CORRECT
poker_player,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Final_Table_Made ASC,CORRECT
poker_player,SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1,SELECT Birth_Date FROM people WHERE People_ID IN (SELECT People_ID FROM poker_player ORDER BY Earnings ASC LIMIT 1),CORRECT
poker_player,SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1,SELECT Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY Earnings ASC LIMIT 1,CORRECT
poker_player,SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Height DESC LIMIT 1,SELECT Money_Rank FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Height DESC LIMIT 1,CORRECT
poker_player,SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Height DESC LIMIT 1,SELECT Money_Rank FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Height DESC LIMIT 1,CORRECT
poker_player,SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 200,SELECT AVG(Earnings) FROM poker_player WHERE Height > 200,WRONG
poker_player,SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 200,SELECT avg(Earnings) FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200,CORRECT
poker_player,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC,SELECT T2.Name FROM poker_player AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Earnings DESC,CORRECT
poker_player,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC,SELECT Name FROM people JOIN poker_player ON people.People_ID = poker_player.People_ID ORDER BY Earnings DESC,CORRECT
poker_player,"SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality","SELECT Nationality , COUNT ( Nationality ) FROM people GROUP BY Nationality",CORRECT
poker_player,"SELECT Nationality , COUNT(*) FROM people GROUP BY Nationality","SELECT Nationality , count(*) FROM people GROUP BY Nationality",CORRECT
poker_player,SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,CORRECT
poker_player,SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,CORRECT
poker_player,SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2,SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2,CORRECT
poker_player,SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2,SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*) >= 2,CORRECT
poker_player,"SELECT Name , Birth_Date FROM people ORDER BY Name ASC","SELECT Name, Birth_Date FROM people ORDER BY Name ASC",CORRECT
poker_player,"SELECT Name , Birth_Date FROM people ORDER BY Name ASC","SELECT Name, Birth_Date FROM people ORDER BY Name ASC",CORRECT
poker_player,"SELECT Name FROM people WHERE Nationality != ""Russia""","SELECT Name FROM people WHERE Nationality != ""Russia""",CORRECT
poker_player,"SELECT Name FROM people WHERE Nationality != ""Russia""","SELECT Name FROM people WHERE Nationality != ""Russia""",CORRECT
poker_player,SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player),SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player),CORRECT
poker_player,SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player),SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player),CORRECT
poker_player,SELECT count(DISTINCT Nationality) FROM people,SELECT COUNT(DISTINCT Nationality) FROM people,CORRECT
poker_player,SELECT count(DISTINCT Nationality) FROM people,SELECT COUNT(DISTINCT Nationality) FROM people,CORRECT
voter_1,SELECT count(*) FROM area_code_state,SELECT COUNT(DISTINCT state) FROM VOTES,WRONG
voter_1,"SELECT contestant_number , contestant_name FROM contestants ORDER BY contestant_name DESC","SELECT contestant_number , contestant_name FROM contestants ORDER BY contestant_name DESC",CORRECT
voter_1,"SELECT vote_id , phone_number , state FROM votes","SELECT vote_id , phone_number , state FROM VOTES",CORRECT
voter_1,"SELECT max(area_code) , min(area_code) FROM area_code_state","SELECT max(area_code) , min(area_code) FROM AREA_CODE_STATE",CORRECT
voter_1,SELECT max(created) FROM votes WHERE state = 'CA',SELECT MAX(created) FROM VOTES WHERE state = 'CA',CORRECT
voter_1,SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway',"SELECT contestant_name FROM CONTESTANTS WHERE contestant_name != ""Jessie Alloway""",CORRECT
voter_1,"SELECT DISTINCT state , created FROM votes","SELECT DISTINCT state , created FROM VOTES",CORRECT
voter_1,"SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number HAVING count(*) >= 2","SELECT T1.contestant_number , T1.contestant_name FROM Contestants AS T1 JOIN Votes AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number HAVING COUNT(*) >= 2",CORRECT
voter_1,"SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1","SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1",CORRECT
voter_1,SELECT count(*) FROM votes WHERE state = 'NY' OR state = 'CA',SELECT count(*) FROM VOTES WHERE state = 'NY' OR state = 'CA',CORRECT
voter_1,SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes ),SELECT count(*) FROM CONTESTANTS WHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES),CORRECT
voter_1,SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state = T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1,"SELECT AREA_CODE_STATE.area_code, COUNT(VOTES.vote_id) AS vote_count FROM VOTES JOIN AREA_CODE_STATE ON VOTES.state = AREA_CODE_STATE.state GROUP BY AREA_CODE_STATE.area_code ORDER BY vote_count DESC LIMIT 1",WRONG
voter_1,"SELECT T2.created , T2.state , T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number WHERE T1.contestant_name = 'Tabatha Gehling'","SELECT created , state , phone_number FROM votes AS T1 JOIN contestants AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = ""Tabatha Gehling""",CORRECT
voter_1,SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number JOIN area_code_state AS T3 ON T2.state = T3.state WHERE T1.contestant_name = 'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number JOIN area_code_state AS T3 ON T2.state = T3.state WHERE T1.contestant_name = 'Kelly Clauss',SELECT DISTINCT T2.area_code FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Tabatha Gehling' INTERSECT SELECT DISTINCT T2.area_code FROM VOTES AS T1 JOIN CONTESTANTS AS T2 ON T1.contestant_number = T2.contestant_number WHERE T2.contestant_name = 'Kelly Clauss',WRONG
voter_1,"SELECT contestant_name from contestants where contestant_name like ""%al%""",SELECT contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '%Al%',CORRECT
world_1,SELECT Name FROM country WHERE IndepYear > 1950,SELECT Name FROM country WHERE IndepYear > 1950,CORRECT
world_1,SELECT Name FROM country WHERE IndepYear > 1950,SELECT Name FROM country WHERE IndepYear > 1950,CORRECT
world_1,"SELECT count(*) FROM country WHERE GovernmentForm = ""Republic""",SELECT COUNT(DISTINCT country.Code) FROM country WHERE country.GovernmentForm = 'Republic',CORRECT
world_1,"SELECT count(*) FROM country WHERE GovernmentForm = ""Republic""",SELECT count(*) FROM country WHERE GovernmentForm = 'Republic',CORRECT
world_1,"SELECT sum(SurfaceArea) FROM country WHERE Region = ""Caribbean""",SELECT sum(SurfaceArea) FROM country WHERE Continent = 'North America' AND Region = 'Caribbean',WRONG
world_1,"SELECT sum(SurfaceArea) FROM country WHERE Region = ""Caribbean""","SELECT sum(surfaceArea) FROM country WHERE continent = ""North America"" AND region = ""Caribbean""",WRONG
world_1,"SELECT Continent FROM country WHERE Name = ""Anguilla""","SELECT Continent FROM country WHERE Code = (SELECT CountryCode FROM city WHERE Name = ""Anguilla"");",WRONG
world_1,"SELECT Continent FROM country WHERE Name = ""Anguilla""","SELECT Continent FROM country WHERE Code = (SELECT CountryCode FROM city WHERE Name = ""Anguilla"");",WRONG
world_1,"SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T2.Name = ""Kabul""","SELECT t1.Region FROM country AS t1 JOIN city AS t2 ON t1.Code = t2.CountryCode WHERE t2.Name = ""Kabul""",CORRECT
world_1,"SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code = T2.CountryCode WHERE T2.Name = ""Kabul""","SELECT Region FROM country WHERE Name = ""Afghanistan"";",WRONG
world_1,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = ""Aruba"" ORDER BY Percentage DESC LIMIT 1",SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') ORDER BY Percentage DESC LIMIT 1,WRONG
world_1,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = ""Aruba"" ORDER BY Percentage DESC LIMIT 1","SELECT Language FROM countrylanguage WHERE CountryCode = ""ABW""",WRONG
world_1,"SELECT Population , LifeExpectancy FROM country WHERE Name = ""Brazil""","SELECT Population , LifeExpectancy FROM country WHERE Name = 'Brazil'",CORRECT
world_1,"SELECT Population , LifeExpectancy FROM country WHERE Name = ""Brazil""","SELECT Population , LifeExpectancy FROM country WHERE Name = 'Brazil'",CORRECT
world_1,"SELECT Population , Region FROM country WHERE Name = ""Angola""","SELECT Region, Population FROM country WHERE Code = ""AO""",WRONG
world_1,"SELECT Population , Region FROM country WHERE Name = ""Angola""","SELECT t1.Region, t1.Population FROM country AS t1 WHERE t1.Name = ""Angola""",CORRECT
world_1,"SELECT avg(LifeExpectancy) FROM country WHERE Region = ""Central Africa""","SELECT avg(LifeExpectancy) FROM country WHERE Continent = ""Africa"" AND Region = ""Central Africa""",WRONG
world_1,"SELECT avg(LifeExpectancy) FROM country WHERE Region = ""Central Africa""",SELECT avg(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND Region = 'Central Africa',WRONG
world_1,"SELECT Name FROM country WHERE Continent = ""Asia"" ORDER BY LifeExpectancy LIMIT 1","SELECT Name FROM country WHERE Continent = ""Asia"" ORDER BY LifeExpectancy ASC LIMIT 1",CORRECT
world_1,"SELECT Name FROM country WHERE Continent = ""Asia"" ORDER BY LifeExpectancy LIMIT 1",SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1,CORRECT
world_1,"SELECT sum(Population) , max(GNP) FROM country WHERE Continent = ""Asia""","SELECT SUM(population) , MAX(gnp) FROM country WHERE continent = 'Asia'",CORRECT
world_1,"SELECT sum(Population) , max(GNP) FROM country WHERE Continent = ""Asia""","SELECT COUNT(DISTINCT country.Code) AS num_countries, MAX(country.GNP) AS max_gnp FROM country WHERE country.Continent = 'Asia'",WRONG
world_1,"SELECT avg(LifeExpectancy) FROM country WHERE Continent = ""Africa"" AND GovernmentForm = ""Republic""","SELECT avg(LifeExpectancy) FROM country WHERE Continent = ""Africa"" AND GovernmentForm = ""Republic""",CORRECT
world_1,"SELECT avg(LifeExpectancy) FROM country WHERE Continent = ""Africa"" AND GovernmentForm = ""Republic""",SELECT avg(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm = 'Republic',CORRECT
world_1,"SELECT sum(SurfaceArea) FROM country WHERE Continent = ""Asia"" OR Continent = ""Europe""",SELECT SUM(SurfaceArea) FROM country WHERE Continent = 'Asia' OR Continent = 'Europe',CORRECT
world_1,"SELECT sum(SurfaceArea) FROM country WHERE Continent = ""Asia"" OR Continent = ""Europe""",SELECT SUM(SurfaceArea) FROM country WHERE Continent = 'Asia' OR Continent = 'Europe',CORRECT
world_1,"SELECT sum(Population) FROM city WHERE District = ""Gelderland""",SELECT count(*) FROM city WHERE district = 'Gelderland';,WRONG
world_1,"SELECT sum(Population) FROM city WHERE District = ""Gelderland""","SELECT sum(population) FROM city WHERE district = ""Gelderland""",CORRECT
world_1,"SELECT avg(GNP) , sum(population) FROM country WHERE GovernmentForm = ""US Territory""","SELECT avg(GNP) , sum(Population) FROM country WHERE GovernmentForm = ""US territory""",WRONG
world_1,"SELECT avg(GNP) , sum(population) FROM country WHERE GovernmentForm = ""US Territory""","SELECT AVG(GNP) AS mean_GNP, SUM(Population) AS total_population FROM country WHERE Continent = 'North America'",WRONG
world_1,SELECT count(DISTINCT LANGUAGE) FROM countrylanguage,SELECT COUNT(DISTINCT Language) FROM countrylanguage,CORRECT
world_1,SELECT count(DISTINCT LANGUAGE) FROM countrylanguage,SELECT COUNT(DISTINCT Language) FROM countrylanguage,CORRECT
world_1,"SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent = ""Africa""",SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa',CORRECT
world_1,"SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent = ""Africa""",SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa',CORRECT
world_1,"SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = ""Aruba""",SELECT COUNT(DISTINCT Language) FROM countrylanguage WHERE CountryCode = 'ABW',WRONG
world_1,"SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = ""Aruba""",SELECT count(*) FROM countrylanguage WHERE CountryCode = 'ABW';,WRONG
world_1,"SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = ""Afghanistan"" AND IsOfficial = ""T""",SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T',WRONG
world_1,"SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = ""Afghanistan"" AND IsOfficial = ""T""",SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = 'AFG' AND IsOfficial = 'T',WRONG
world_1,SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1,SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1,CORRECT
world_1,SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1,SELECT t1.name FROM country AS t1 JOIN countrylanguage AS t2 ON t1.code = t2.countrycode GROUP BY t1.name ORDER BY count(*) DESC LIMIT 1,CORRECT
world_1,SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1,"SELECT T1.Continent , COUNT(DISTINCT T2.Language) AS LanguageCount FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Continent ORDER BY LanguageCount DESC LIMIT 1",WRONG
world_1,SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1,"SELECT Continent, COUNT(DISTINCT Language) AS num_lang FROM country GROUP BY Continent ORDER BY num_lang DESC LIMIT 1",WRONG
world_1,"SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""Dutch"")",SELECT COUNT(DISTINCT country.Code) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' AND country.Code IN ( SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Dutch' ),WRONG
world_1,"SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""Dutch"")",SELECT count(*) FROM countrylanguage WHERE Language = 'English' INTERSECT SELECT count(*) FROM countrylanguage WHERE Language = 'Dutch',WRONG
world_1,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""French""",SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' AND countrylanguage.Language = 'French',WRONG
world_1,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""French""",SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' AND country.Code IN ( SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'French' ),WRONG
world_1,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"" AND T2.IsOfficial = ""T"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""French"" AND T2.IsOfficial = ""T""",SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' AND countrylanguage.Language = 'French',WRONG
world_1,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"" AND T2.IsOfficial = ""T"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""French"" AND T2.IsOfficial = ""T""","SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = ""English"" AND countrylanguage.Language = ""French""",WRONG
world_1,"SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""Chinese""","SELECT COUNT(DISTINCT country.continent) FROM country, countrylanguage WHERE country.code = countrylanguage.countrycode AND countrylanguage.language = 'Chinese'",CORRECT
world_1,"SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""Chinese""",SELECT count(DISTINCT Continent) FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Chinese'),CORRECT
world_1,"SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"" OR T2.Language = ""Dutch""",SELECT DISTINCT Region FROM country WHERE Language = 'English' OR Language = 'Dutch',WRONG
world_1,"SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"" OR T2.Language = ""Dutch""","SELECT DISTINCT(region) FROM country WHERE language = ""Dutch"" OR language = ""English""",WRONG
world_1,"SELECT t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = ""english"" and isofficial = ""t"" union select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = ""dutch"" and isofficial = ""t""","SELECT DISTINCT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = ""English"" OR countrylanguage.language = ""Dutch""",WRONG
world_1,"SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"" AND IsOfficial = ""T"" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""Dutch"" AND IsOfficial = ""T""",SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch',WRONG
world_1,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = ""Asia"" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",SELECT Language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Asia') GROUP BY Language ORDER BY count(*) DESC LIMIT 1,CORRECT
world_1,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = ""Asia"" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1","SELECT t1.Language FROM countrylanguage AS t1 JOIN country AS t2 ON t1.CountryCode = t2.Code WHERE t2.Continent = ""Asia"" GROUP BY t1.Language ORDER BY COUNT(*) DESC LIMIT 1",CORRECT
world_1,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.GovernmentForm = ""Republic"" GROUP BY T2.Language HAVING COUNT(*) = 1","SELECT countrylanguage.Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.GovernmentForm = ""Republic"" GROUP BY countrylanguage.Language HAVING count(*) = 1",CORRECT
world_1,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.GovernmentForm = ""Republic"" GROUP BY T2.Language HAVING COUNT(*) = 1","SELECT DISTINCT language FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE governmentform = ""Republic"" GROUP BY code HAVING COUNT(code) = 1)",WRONG
world_1,"SELECT T1.Name , T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = ""English"" ORDER BY T1.Population DESC LIMIT 1","SELECT T1.Name FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = ""English"" ORDER BY T1.Population DESC LIMIT 1",WRONG
world_1,"SELECT T1.Name , T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = ""English"" ORDER BY T1.Population DESC LIMIT 1","SELECT T1.Name FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = ""English"" ORDER BY T1.Population DESC LIMIT 1",WRONG
world_1,"SELECT Name , Population , LifeExpectancy FROM country WHERE Continent = ""Asia"" ORDER BY SurfaceArea DESC LIMIT 1","SELECT name , population , lifeExpectancy FROM country WHERE continent = 'Asia' ORDER BY surfaceArea DESC LIMIT 1",CORRECT
world_1,"SELECT Name , Population , LifeExpectancy FROM country WHERE Continent = ""Asia"" ORDER BY SurfaceArea DESC LIMIT 1","SELECT Name , Population , LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1",CORRECT
world_1,"SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"" AND T2.IsOfficial = ""T"")","SELECT avg(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = ""English"")",WRONG
world_1,"SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"" AND T2.IsOfficial = ""T"")","SELECT AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = ""English"" AND IsOfficial = ""T"")",WRONG
world_1,"SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"")",SELECT SUM(country.Population) FROM country WHERE country.Code NOT IN ( SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'English' ),WRONG
world_1,"SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = ""English"")",SELECT SUM(country.Population) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language != 'English',WRONG
world_1,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = ""Beatrix"" AND T2.IsOfficial = ""T""","SELECT Language FROM countrylanguage WHERE HeadOfState = ""Beatrix""",WRONG
world_1,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = ""Beatrix"" AND T2.IsOfficial = ""T""",SELECT Language FROM countrylanguage WHERE HeadOfState = 'Beatrix' AND IsOfficial = 'T',WRONG
world_1,"SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE IndepYear < 1930 AND T2.IsOfficial = ""T""",SELECT count(DISTINCT countrylanguage.Language) FROM countrylanguage JOIN country ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930,WRONG
world_1,"SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE IndepYear < 1930 AND T2.IsOfficial = ""T""",SELECT count(distinct(language)) FROM countrylanguage AS T1 JOIN country AS T2 ON T1.countrycode = T2.code WHERE T2.indepyear < 1930,WRONG
world_1,"SELECT Name FROM country WHERE SurfaceArea > (SELECT min(SurfaceArea) FROM country WHERE Continent = ""Europe"")",SELECT `Name` FROM `country` WHERE `SurfaceArea` > (SELECT MAX(`SurfaceArea`) FROM `country` WHERE `Continent` = 'Europe'),WRONG
world_1,"SELECT Name FROM country WHERE SurfaceArea > (SELECT min(SurfaceArea) FROM country WHERE Continent = ""Europe"")",SELECT country.name FROM country WHERE country.surfacearea > ( SELECT MAX(surfacearea) FROM country WHERE country.continent = 'Europe' ),WRONG
world_1,"SELECT Name FROM country WHERE Continent = ""Africa"" AND population < (SELECT max(population) FROM country WHERE Continent = ""Asia"")",SELECT * FROM country WHERE continent = 'Africa' AND population < (SELECT population FROM country WHERE continent = 'Asia' ORDER BY population ASC LIMIT 1),WRONG
world_1,"SELECT Name FROM country WHERE Continent = ""Africa"" AND population < (SELECT min(population) FROM country WHERE Continent = ""Asia"")",SELECT c.Name FROM country c WHERE c.Continent = 'Africa' AND c.Population < ( SELECT MIN(c2.Population) FROM country c2 WHERE c2.Continent = 'Asia' ),CORRECT
world_1,"SELECT Name FROM country WHERE Continent = ""Asia"" AND population > (SELECT max(population) FROM country WHERE Continent = ""Africa"")",SELECT country.name FROM country WHERE country.continent = 'Asia' AND country.population > ( SELECT MAX(country.population) FROM country WHERE country.continent = 'Africa' ),CORRECT
world_1,"SELECT Name FROM country WHERE Continent = ""Asia"" AND population > (SELECT min(population) FROM country WHERE Continent = ""Africa"")",SELECT country.Name FROM country WHERE country.Continent = 'Asia' AND country.Population > ( SELECT MAX(country.Population) FROM country WHERE country.Continent = 'Africa' ),WRONG
world_1,"SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE = ""English""","SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != ""English""",WRONG
world_1,"SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE = ""English""",SELECT DISTINCT countrycode FROM countrylanguage WHERE language != 'English',WRONG
world_1,"SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != ""English""",SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English',CORRECT
world_1,"SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != ""English""",SELECT DISTINCT countrycode FROM countrylanguage WHERE language != 'English',CORRECT
world_1,"SELECT Code FROM country WHERE GovernmentForm != ""Republic"" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE = ""English""","SELECT Code FROM country WHERE Language != ""English"" AND GovernmentForm != ""Republic""",WRONG
world_1,"SELECT Code FROM country WHERE GovernmentForm != ""Republic"" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE = ""English""","SELECT Code FROM country WHERE Language != ""English"" AND GovernmentForm != ""Republic""",WRONG
world_1,SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode = T1.Code WHERE T1.Continent = 'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code = T4.CountryCode WHERE T4.IsOfficial = 'T' AND T4.Language = 'English'),SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'F',WRONG
world_1,SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode = T1.Code WHERE T1.Continent = 'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code = T4.CountryCode WHERE T4.IsOfficial = 'T' AND T4.Language = 'English'),SELECT DISTINCT T1.Name FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'F' AND T1.CountryCode = (SELECT T3.Code FROM country AS T3 WHERE T3.Continent = 'Europe'),WRONG
world_1,"SELECT distinct t3.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode join city as t3 on t1.code = t3.countrycode where t2.isofficial = 't' and t2.language = 'chinese' and t1.continent = ""asia""","SELECT DISTINCT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = ""Chinese"" AND countrylanguage.IsOfficial = ""T"" AND country.Continent = ""Asia""",WRONG
world_1,"SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode JOIN city AS T3 ON T1.Code = T3.CountryCode WHERE T2.IsOfficial = 'T' AND T2.Language = 'Chinese' AND T1.Continent = ""Asia""","SELECT DISTINCT T1.Name FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = ""Chinese"" AND T2.IsOfficial = ""T"" AND T1.Continent = ""Asia""",WRONG
world_1,"SELECT Name , SurfaceArea , IndepYear FROM country ORDER BY Population LIMIT 1","SELECT Name , Independence_Year , Surface_Area FROM country ORDER BY Population ASC LIMIT 1",WRONG
world_1,"SELECT Name , SurfaceArea , IndepYear FROM country ORDER BY Population LIMIT 1","SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country)",WRONG
world_1,"SELECT Name , population , HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1","SELECT T1.Population , T1.Name , T1.HeadOfState FROM country AS T1 JOIN (SELECT MAX(SurfaceArea) FROM country) AS T2 ON T1.SurfaceArea = T2.SurfaceArea",WRONG
world_1,"SELECT Name , population , HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1","SELECT Name , Population , HeadOfState FROM country WHERE area = ( SELECT MAX ( area ) FROM country );",WRONG
world_1,"SELECT COUNT(T2.Language) , T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name HAVING COUNT(*) > 2","SELECT country.name , count(*) FROM countrylanguage JOIN country ON country.code = countrylanguage.countrycode GROUP BY country.code HAVING count(*) >= 3",WRONG
world_1,"SELECT COUNT(T2.Language) , T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name HAVING COUNT(*) > 2","SELECT country.Name, COUNT(countrylanguage.Language) AS num_languages FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Name HAVING COUNT(countrylanguage.Language) > 2",CORRECT
world_1,"SELECT count(*) , District FROM city WHERE Population > (SELECT avg(Population) FROM city) GROUP BY District","SELECT District , count(*) FROM city GROUP BY District HAVING avg(population) > 1000000",WRONG
world_1,"SELECT count(*) , District FROM city WHERE Population > (SELECT avg(Population) FROM city) GROUP BY District","SELECT city.District , count(*) FROM city JOIN (SELECT avg(population) FROM city) AS T1 ON city.population > T1.avg GROUP BY city.District",WRONG
world_1,"SELECT sum(Population) , GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy) > 72","SELECT governmentform , SUM(population) FROM country GROUP BY governmentform HAVING avg(lifeexpectancy) > 72",CORRECT
world_1,"SELECT sum(Population) , GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy) > 72","SELECT GovernmentForm , SUM(Population) FROM country WHERE LifeExpectancy > 72 GROUP BY GovernmentForm",WRONG
world_1,"SELECT sum(Population) , avg(LifeExpectancy) , Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72","SELECT avg(LifeExpectancy) , Continent , sum(Population) FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72",CORRECT
world_1,"SELECT sum(Population) , avg(LifeExpectancy) , Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy) < 72","SELECT Continent , sum(Population) , avg(LifeExpectancy) FROM country WHERE LifeExpectancy < 72 GROUP BY Continent",WRONG
world_1,"SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5","SELECT Name , Area FROM country ORDER BY Area DESC LIMIT 5",WRONG
world_1,"SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5","SELECT Name , SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",CORRECT
world_1,SELECT Name FROM country ORDER BY Population DESC LIMIT 3,SELECT Name FROM country ORDER BY Population DESC LIMIT 3,CORRECT
world_1,SELECT Name FROM country ORDER BY Population DESC LIMIT 3,"SELECT T1.name FROM country AS T1 JOIN (SELECT countrycode, SUM(population) AS total_population FROM city GROUP BY countrycode ORDER BY total_population DESC LIMIT 3) AS T2 ON T1.code = T2.countrycode",WRONG
world_1,SELECT Name FROM country ORDER BY Population ASC LIMIT 3,SELECT T1.name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.code = T2.countrycode GROUP BY T1.name ORDER BY sum(T1.population) ASC LIMIT 3,WRONG
world_1,SELECT Name FROM country ORDER BY Population ASC LIMIT 3,SELECT Name FROM country ORDER BY Population ASC LIMIT 3,CORRECT
world_1,"SELECT count(*) FROM country WHERE continent = ""Asia""",SELECT count(*) FROM country WHERE Continent = 'Asia',CORRECT
world_1,"SELECT count(*) FROM country WHERE continent = ""Asia""","SELECT count(*) FROM country WHERE Continent = ""Asia""",CORRECT
world_1,"SELECT Name FROM country WHERE continent = ""Europe"" AND Population = ""80000""","SELECT Name FROM country WHERE Continent = ""Europe"" AND Population = 80000",CORRECT
world_1,"SELECT Name FROM country WHERE continent = ""Europe"" AND Population = ""80000""","SELECT Name FROM country WHERE Continent = ""Europe"" AND Population = 80000",CORRECT
world_1,"SELECT sum(population) , avg(surfacearea) from country where continent = ""north america"" and surfacearea > 3000","SELECT sum(T1.population) , avg(T1.surfacearea) FROM country AS T1 WHERE T1.continent = 'North America' AND T1.surfacearea > 3000",WRONG
world_1,"SELECT sum(population) , avg(surfacearea) from country where continent = ""north america"" and surfacearea > 3000","SELECT SUM(population) , AVG(surfacearea) FROM country WHERE region = 'North America' AND surfacearea > 3000",WRONG
world_1,SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000,SELECT name FROM city WHERE population BETWEEN 160000 AND 900000,CORRECT
world_1,SELECT name from city where population between 160000 and 900000,SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000,CORRECT
world_1,SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1,SELECT t1.Language FROM countryLanguage AS t1 JOIN country AS t2 ON t1.CountryCode = t2.Code GROUP BY t1.Language ORDER BY count(*) DESC LIMIT 1,CORRECT
world_1,SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1,SELECT t1.Language FROM countrylanguage AS t1 GROUP BY t1.Language ORDER BY count(*) DESC LIMIT 1,CORRECT
world_1,"SELECT LANGUAGE , CountryCode , max(Percentage) FROM countrylanguage GROUP BY CountryCode","SELECT country.Name, countrylanguage.Language, countrylanguage.Percentage FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE countrylanguage.Percentage = ( SELECT MAX(countrylanguage.Percentage) FROM countrylanguage WHERE countrylanguage.CountryCode = country.Code )",WRONG
world_1,"SELECT LANGUAGE , CountryCode , max(Percentage) FROM countrylanguage GROUP BY CountryCode","SELECT T1.CountryCode , T2.Language FROM countrylanguage AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.IsOfficial = ""T"" AND T1.Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = T1.CountryCode)",WRONG
world_1,"SELECT count(*) , max(Percentage) FROM countrylanguage WHERE LANGUAGE = ""Spanish"" GROUP BY CountryCode",SELECT COUNT(DISTINCT countrycode) FROM countrylanguage WHERE language = 'Spanish' AND percentage > 50,WRONG
world_1,"SELECT count(*) , max(Percentage) FROM countrylanguage WHERE LANGUAGE = ""Spanish"" GROUP BY CountryCode",SELECT count(*) FROM countrylanguage WHERE Language = 'Spanish' AND IsOfficial = 'T',WRONG
world_1,"SELECT CountryCode , max(Percentage) FROM countrylanguage WHERE LANGUAGE = ""Spanish"" GROUP BY CountryCode",SELECT countrycode FROM countrylanguage WHERE language = 'Spanish' ORDER BY percentage DESC LIMIT 1,WRONG
world_1,"SELECT CountryCode , max(Percentage) FROM countrylanguage WHERE LANGUAGE = ""Spanish"" GROUP BY CountryCode","SELECT t1.code FROM country AS t1 JOIN countrylanguage AS t2 ON t1.code = t2.countrycode WHERE t2.language = ""Spanish"" AND t2.isOfficial = ""T""",WRONG
orchestra,SELECT count(*) FROM conductor,SELECT count(*) FROM conductor,CORRECT
orchestra,SELECT count(*) FROM conductor,SELECT count(*) FROM conductor,CORRECT
orchestra,SELECT Name FROM conductor ORDER BY Age ASC,SELECT Name FROM conductor ORDER BY Age ASC,CORRECT
orchestra,SELECT Name FROM conductor ORDER BY Age ASC,SELECT Name FROM conductor ORDER BY Age,CORRECT
orchestra,SELECT Name FROM conductor WHERE Nationality != 'USA',"SELECT Name FROM conductor WHERE Nationality != ""USA""",CORRECT
orchestra,SELECT Name FROM conductor WHERE Nationality != 'USA',"SELECT Name FROM conductor WHERE Nationality != ""USA""",CORRECT
orchestra,SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC,SELECT DISTINCT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC,CORRECT
orchestra,SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC,SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC,CORRECT
orchestra,SELECT avg(Attendance) FROM SHOW,SELECT AVG(Attendance) FROM show;,CORRECT
orchestra,SELECT avg(Attendance) FROM SHOW,SELECT AVG(Attendance) FROM show,CORRECT
orchestra,"SELECT max(SHARE) , min(SHARE) FROM performance WHERE TYPE != ""Live final""","SELECT max(share) , min(share) FROM performance WHERE type != ""Live final""",CORRECT
orchestra,"SELECT max(SHARE) , min(SHARE) FROM performance WHERE TYPE != ""Live final""","SELECT max(share) , min(share) FROM performance WHERE type != ""Live final""",CORRECT
orchestra,SELECT count(DISTINCT Nationality) FROM conductor,SELECT COUNT(DISTINCT Nationality) FROM conductor,CORRECT
orchestra,SELECT count(DISTINCT Nationality) FROM conductor,SELECT COUNT(DISTINCT Nationality) FROM conductor,CORRECT
orchestra,SELECT Name FROM conductor ORDER BY Year_of_Work DESC,SELECT Name FROM conductor ORDER BY Year_of_Work DESC,CORRECT
orchestra,SELECT Name FROM conductor ORDER BY Year_of_Work DESC,"SELECT Name , Year_of_Work FROM conductor ORDER BY Year_of_Work DESC",WRONG
orchestra,SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1,"SELECT Name, MAX(Year_of_Work) FROM conductor",WRONG
orchestra,SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY sum(T2.Year_of_Work) DESC LIMIT 1,WRONG
orchestra,"SELECT T1.Name , T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID","SELECT T1.Name , T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID",CORRECT
orchestra,"SELECT T1.Name , T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID","SELECT T1.Name , T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID",CORRECT
orchestra,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*) > 1,SELECT T2.Name FROM orchestra AS T1 JOIN conductor AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Name HAVING COUNT(*) > 1,WRONG
orchestra,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*) > 1,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID HAVING COUNT(*) > 1,CORRECT
orchestra,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Conductor_ID ORDER BY count(*) DESC LIMIT 1,CORRECT
orchestra,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T1.Name ORDER BY count(*) DESC LIMIT 1,WRONG
orchestra,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE Year_of_Founded > 2008,SELECT DISTINCT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008,CORRECT
orchestra,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE Year_of_Founded > 2008,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE T2.Year_of_Founded > 2008,CORRECT
orchestra,"SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company","SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company",CORRECT
orchestra,"SELECT Record_Company , COUNT(*) FROM orchestra GROUP BY Record_Company","SELECT Record_Company , count(*) FROM orchestra GROUP BY Record_Company",CORRECT
orchestra,SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,CORRECT
orchestra,SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) DESC,WRONG
orchestra,SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1,SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1,CORRECT
orchestra,SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1,SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY count(*) DESC LIMIT 1,CORRECT
orchestra,SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance),SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance),CORRECT
orchestra,SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance),SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance),CORRECT
orchestra,SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003,SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded > 2003,CORRECT
orchestra,SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003,SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded > 2003,CORRECT
orchestra,"SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format = ""CD"" OR Major_Record_Format = ""DVD""","SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format = ""CD"" OR Major_Record_Format = ""DVD""",CORRECT
orchestra,"SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format = ""CD"" OR Major_Record_Format = ""DVD""","SELECT count(*) FROM orchestra WHERE Major_Record_Format = ""CD"" OR Major_Record_Format = ""DVD""",CORRECT
orchestra,SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*) > 1,SELECT Year_of_Founded FROM orchestra GROUP BY Orchestra_ID HAVING count(*) > 1,WRONG
orchestra,SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*) > 1,SELECT Year_of_Founded FROM orchestra WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM performance GROUP BY Orchestra_ID HAVING COUNT(*) > 1),CORRECT
network_1,SELECT count(*) FROM Highschooler,SELECT count(*) FROM Highschooler,CORRECT
network_1,SELECT count(*) FROM Highschooler,SELECT count(*) FROM Highschooler,CORRECT
network_1,"SELECT name , grade FROM Highschooler","SELECT name , grade FROM Highschooler",CORRECT
network_1,"SELECT name , grade FROM Highschooler","SELECT name , grade FROM Highschooler",CORRECT
network_1,SELECT grade FROM Highschooler,SELECT grade FROM Highschooler,CORRECT
network_1,SELECT grade FROM Highschooler,"SELECT name , grade FROM Highschooler",WRONG
network_1,"SELECT grade FROM Highschooler WHERE name = ""Kyle""","SELECT grade FROM Highschooler WHERE name = ""Kyle"";",CORRECT
network_1,"SELECT grade FROM Highschooler WHERE name = ""Kyle""","SELECT grade FROM Highschooler WHERE name = ""Kyle""",CORRECT
network_1,SELECT name FROM Highschooler WHERE grade = 10,SELECT name FROM Highschooler WHERE grade = 10,CORRECT
network_1,SELECT name FROM Highschooler WHERE grade = 10,SELECT name FROM Highschooler WHERE grade = 10,CORRECT
network_1,"SELECT ID FROM Highschooler WHERE name = ""Kyle""","SELECT ID FROM Highschooler WHERE name = ""Kyle""",CORRECT
network_1,"SELECT ID FROM Highschooler WHERE name = ""Kyle""",SELECT ID FROM Highschooler WHERE name = 'Kyle',CORRECT
network_1,SELECT count(*) FROM Highschooler WHERE grade = 9 OR grade = 10,SELECT count(*) FROM Highschooler WHERE grade = 9 OR grade = 10,CORRECT
network_1,SELECT count(*) FROM Highschooler WHERE grade = 9 OR grade = 10,SELECT count(*) FROM Highschooler WHERE grade = 9 OR grade = 10,CORRECT
network_1,"SELECT grade , count(*) FROM Highschooler GROUP BY grade","SELECT grade , count(*) FROM Highschooler GROUP BY grade",CORRECT
network_1,"SELECT grade , count(*) FROM Highschooler GROUP BY grade","SELECT grade , count(*) FROM Highschooler GROUP BY grade",CORRECT
network_1,SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,CORRECT
network_1,SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,CORRECT
network_1,SELECT grade FROM Highschooler GROUP BY grade HAVING count(*) >= 4,SELECT grade FROM Highschooler GROUP BY grade HAVING count(*) >= 4,CORRECT
network_1,SELECT grade FROM Highschooler GROUP BY grade HAVING count(*) >= 4,SELECT grade FROM Highschooler GROUP BY grade HAVING count(*) >= 4,CORRECT
network_1,"SELECT student_id , count(*) FROM Friend GROUP BY student_id","SELECT student_id , count(*) FROM Friend GROUP BY student_id",CORRECT
network_1,"SELECT student_id , count(*) FROM Friend GROUP BY student_id",SELECT count(*) FROM Friend GROUP BY student_id,WRONG
network_1,"SELECT T2.name , count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id","SELECT H.name, COUNT(F.friend_id) FROM Highschooler AS H LEFT JOIN Friend AS F ON H.ID = F.student_id GROUP BY H.name",WRONG
network_1,"SELECT T2.name , count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id","SELECT T1.name, count(*) FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.name",WRONG
network_1,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID ORDER BY count(*) DESC LIMIT 1,CORRECT
network_1,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID ORDER BY count(*) DESC LIMIT 1,CORRECT
network_1,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id HAVING count(*) >= 3,SELECT name FROM Highschooler WHERE ID IN ( SELECT student_id FROM Friend GROUP BY student_id HAVING COUNT(*) >= 3 ),CORRECT
network_1,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id HAVING count(*) >= 3,SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.ID HAVING COUNT(*) >= 3,CORRECT
network_1,"SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id JOIN Highschooler AS T3 ON T1.friend_id = T3.id WHERE T2.name = ""Kyle""","SELECT T2.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T1.name = ""Kyle""",WRONG
network_1,"SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id JOIN Highschooler AS T3 ON T1.friend_id = T3.id WHERE T2.name = ""Kyle""","SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.friend_id WHERE T2.student_id = (SELECT ID FROM Highschooler WHERE name = ""Kyle"")",WRONG
network_1,"SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.name = ""Kyle""","SELECT count(*) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = ""Kyle"")",WRONG
network_1,"SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.name = ""Kyle""","SELECT count(*) FROM Friend WHERE student_id = (SELECT ID FROM Highschooler WHERE name = ""Kyle"")",WRONG
network_1,SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend,SELECT ID FROM Highschooler EXCEPT SELECT student_id FROM Friend,CORRECT
network_1,SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend,SELECT ID FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend),CORRECT
network_1,SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id,SELECT name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend),WRONG
network_1,SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id,SELECT Name FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend),WRONG
network_1,SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes,SELECT T1.student_id FROM Friend AS T1 JOIN Likes AS T2 ON T1.student_id = T2.liked_id,WRONG
network_1,SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes,SELECT T1.student_id FROM Friend AS T1 JOIN Likes AS T2 ON T1.student_id = T2.student_id,WRONG
network_1,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id = T2.id,SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id JOIN Likes AS T3 ON T1.ID = T3.liked_id,WRONG
network_1,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id = T2.id,SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.liked_id JOIN Friend AS T3 ON T1.ID = T3.student_id,WRONG
network_1,"SELECT student_id , count(*) FROM Likes GROUP BY student_id","SELECT count(*) , student_id FROM Likes GROUP BY student_id",CORRECT
network_1,"SELECT student_id , count(*) FROM Likes GROUP BY student_id","SELECT student_id , COUNT(*) FROM Likes GROUP BY student_id",CORRECT
network_1,"SELECT T2.name , count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id","SELECT T1.name, count(*) FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.liked_id GROUP BY T1.ID",WRONG
network_1,"SELECT T2.name , count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id","SELECT T1.name , count(*) FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.liked_id GROUP BY T1.name",WRONG
network_1,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.liked_id GROUP BY T1.ID ORDER BY count(*) DESC LIMIT 1,WRONG
network_1,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.liked_id GROUP BY T1.ID ORDER BY COUNT(*) DESC LIMIT 1,WRONG
network_1,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id HAVING count(*) >= 2,SELECT name FROM Highschooler WHERE ID IN (SELECT student_id FROM Likes GROUP BY student_id HAVING count(*) >= 2),CORRECT
network_1,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id HAVING count(*) >= 2,SELECT T1.name FROM Highschooler AS T1 JOIN Likes AS T2 ON T1.ID = T2.student_id GROUP BY T1.name HAVING count(*) >= 2,WRONG
network_1,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.grade > 5 GROUP BY T1.student_id HAVING count(*) >= 2,SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id WHERE T1.grade > 5 GROUP BY T1.name HAVING COUNT(T2.student_id) >= 2,WRONG
network_1,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.grade > 5 GROUP BY T1.student_id HAVING count(*) >= 2,SELECT name FROM Highschooler WHERE grade > 5 INTERSECT SELECT T1.name FROM Highschooler AS T1 JOIN Friend AS T2 ON T1.ID = T2.student_id GROUP BY T1.name HAVING COUNT(T2.student_id) >= 2,WRONG
network_1,"SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.name = ""Kyle""",SELECT count(*) FROM Likes WHERE student_id = 1,WRONG
network_1,"SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.name = ""Kyle""","SELECT count(*) FROM Likes WHERE liked_id = (SELECT ID FROM Highschooler WHERE name = ""Kyle"")",WRONG
network_1,SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id),SELECT avg(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend),CORRECT
network_1,SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id),SELECT avg(grade) FROM Highschooler WHERE ID IN (SELECT student_id FROM Friend),CORRECT
network_1,SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id),SELECT min(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend),CORRECT
network_1,SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id),SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend),CORRECT
dog_kennels,SELECT state FROM Owners INTERSECT SELECT state FROM Professionals,SELECT DISTINCT state FROM Owners WHERE state IN (SELECT DISTINCT state FROM Professionals),WRONG
dog_kennels,SELECT state FROM Owners INTERSECT SELECT state FROM Professionals,SELECT DISTINCT state FROM Owners UNION SELECT DISTINCT state FROM Professionals,WRONG
dog_kennels,SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ),"SELECT avg(age) FROM Treatments, Dogs WHERE Treatments.dog_id = Dogs.dog_id",WRONG
dog_kennels,SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ),SELECT avg(age) FROM Treatments AS T INNER JOIN Dogs AS D ON T.dog_id = D.dog_id,WRONG
dog_kennels,"SELECT professional_id , last_name , cell_number FROM Professionals WHERE state = 'Indiana' UNION SELECT T1.professional_id , T1.last_name , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count(*) > 2","SELECT professional_id , last_name , cell_number FROM professionals WHERE state = ""Indiana"" OR professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) > 2)",CORRECT
dog_kennels,"SELECT professional_id , last_name , cell_number FROM Professionals WHERE state = 'Indiana' UNION SELECT T1.professional_id , T1.last_name , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count(*) > 2","SELECT professional_id , last_name , cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT( * ) > 2)",CORRECT
dog_kennels,SELECT name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment) > 1000 ),SELECT T1.name FROM Treatments AS T1 JOIN Dogs AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.dog_id HAVING sum(T1.cost_of_treatment) <= 1000,WRONG
dog_kennels,SELECT name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment) > 1000 ),SELECT Dogs.name FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN Owners ON Dogs.owner_id = Owners.owner_id WHERE Owners.first_name NOT IN (SELECT Owners.first_name FROM Owners JOIN Treatments ON Owners.owner_id = Treatments.owner_id GROUP BY Owners.first_name HAVING SUM(Treatments.cost_of_treatment) > 1000),WRONG
dog_kennels,SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs,SELECT first_name FROM Owners WHERE first_name NOT IN (SELECT name FROM Dogs) UNION SELECT first_name FROM Professionals WHERE first_name NOT IN (SELECT name FROM Dogs),CORRECT
dog_kennels,SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs,SELECT CASE WHEN Owner.first_name IS NOT NULL THEN Owner.first_name WHEN Professional.first_name IS NOT NULL THEN Professional.first_name END AS first_name FROM Owner FULL OUTER JOIN Professional ON Owner.first_name = Professional.first_name WHERE Owner.first_name NOT IN (SELECT name FROM Dogs) AND Professional.first_name NOT IN (SELECT name FROM Dogs),WRONG
dog_kennels,"SELECT professional_id , role_code , email_address FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id","SELECT professional_id , role_code , email_address FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",CORRECT
dog_kennels,"SELECT professional_id , role_code , email_address FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id","SELECT professional_id , role_code , email_address FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id",CORRECT
dog_kennels,"SELECT T1.owner_id , T2.first_name , T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.owner_id , T1.first_name , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",CORRECT
dog_kennels,"SELECT T1.owner_id , T2.first_name , T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","SELECT owner_id , first_name , last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",WRONG
dog_kennels,"SELECT T1.professional_id , T1.role_code , T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count(*) >= 2","SELECT professional_id , role_code , first_name FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id GROUP BY professional_id HAVING count(*) >= 2",WRONG
dog_kennels,"SELECT T1.professional_id , T1.role_code , T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count(*) >= 2","SELECT professional_id , role_code , first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count(*) >= 2",WRONG
dog_kennels,SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1,SELECT breed_name FROM Breeds WHERE breed_code IN ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) DESC LIMIT 1 ),WRONG
dog_kennels,SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1,SELECT breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1,CORRECT
dog_kennels,"SELECT T1.owner_id , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.owner_id , T1.last_name FROM owners AS T1 JOIN dogs AS T2 ON T1.owner_id = T2.owner_id JOIN treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",WRONG
dog_kennels,"SELECT T1.owner_id , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","SELECT T1.owner_id , T1.last_name FROM owners AS T1 JOIN dogs AS T2 ON T1.owner_id = T2.owner_id JOIN treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",WRONG
dog_kennels,SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1,SELECT T1.treatment_type_description FROM Treatment_Types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY T1.treatment_type_description ORDER BY sum(T2.cost_of_treatment) ASC LIMIT 1,WRONG
dog_kennels,SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1,SELECT treatment_type_description FROM Treatment_Types WHERE treatment_type_code = (SELECT treatment_type_code FROM Treatments GROUP BY treatment_type_code ORDER BY sum(cost_of_treatment) LIMIT 1),CORRECT
dog_kennels,"SELECT T1.owner_id , T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1","SELECT owner_id , zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T3.dog_id = T2.dog_id GROUP BY T1.owner_id ORDER BY sum(cost_of_treatment) DESC LIMIT 1",WRONG
dog_kennels,"SELECT T1.owner_id , T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1","SELECT T1.owner_id , T1.zip_code FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id GROUP BY T1.owner_id ORDER BY sum(T2.cost_of_treatment) DESC LIMIT 1",WRONG
dog_kennels,"SELECT T1.professional_id , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count(*) >= 2","SELECT professional_id , cell_number FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT ( DISTINCT treatment_type_code ) >= 2)",CORRECT
dog_kennels,"SELECT T1.professional_id , T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING count(*) >= 2","SELECT professional_id , cell_number FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) >= 2)",CORRECT
dog_kennels,"SELECT DISTINCT T1.first_name , T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment < ( SELECT avg(cost_of_treatment) FROM Treatments )","SELECT first_name , last_name FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments WHERE cost_of_treatment < (SELECT avg(cost_of_treatment) FROM treatments))",WRONG
dog_kennels,"SELECT DISTINCT T1.first_name , T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment < ( SELECT avg(cost_of_treatment) FROM Treatments )","SELECT first_name , last_name FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments WHERE cost_of_treatment < (SELECT avg(cost_of_treatment) FROM treatments))",WRONG
dog_kennels,"SELECT T1.date_of_treatment , T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id","SELECT date_of_treatment , first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id",CORRECT
dog_kennels,"SELECT T1.date_of_treatment , T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id = T2.professional_id","SELECT date_of_treatment , first_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id",CORRECT
dog_kennels,"SELECT T1.cost_of_treatment , T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code","SELECT T1.cost_of_treatment , T2.treatment_type_description FROM Treatments AS T1 JOIN Treatment_Types AS T2 ON T1.treatment_type_code = T2.treatment_type_code",CORRECT
dog_kennels,"SELECT T1.cost_of_treatment , T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code","SELECT T1.Cost_of_Treatment , T2.Treatment_Type_Description FROM Treatments AS T1 JOIN Treatment_Types AS T2 ON T1.Treatment_Type_Code = T2.Treatment_Type_Code",CORRECT
dog_kennels,"SELECT T1.first_name , T1.last_name , T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id","SELECT T1.first_name , T1.last_name , T2.size_description FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id",WRONG
dog_kennels,"SELECT T1.first_name , T1.last_name , T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id","SELECT T1.first_name , T1.last_name , T2.size_description FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Sizes AS T3 ON T2.size_code = T3.size_code",WRONG
dog_kennels,"SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id","SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id",CORRECT
dog_kennels,"SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id","SELECT Owners.first_name , Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id",CORRECT
dog_kennels,"SELECT T1.name , T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )","SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Dogs.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1 )",CORRECT
dog_kennels,"SELECT T1.name , T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )","SELECT Dogs.name , Treatments.date_of_treatment FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Dogs.breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1)",CORRECT
dog_kennels,"SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'","SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'",CORRECT
dog_kennels,"SELECT T1.first_name , T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T1.state = 'Virginia'","SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'Virginia'",CORRECT
dog_kennels,"SELECT DISTINCT T1.date_arrived , T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id","SELECT date_arrived , date_departed FROM dogs AS t1 JOIN treatments AS t2 ON t1.dog_id = t2.dog_id",CORRECT
dog_kennels,"SELECT DISTINCT T1.date_arrived , T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id","SELECT date_arrived , date_departed FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)",WRONG
dog_kennels,SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T2.age = ( SELECT max(age) FROM Dogs ),SELECT T1.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id ORDER BY T1.date_of_birth ASC LIMIT 1,WRONG
dog_kennels,SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id WHERE T2.age = ( SELECT max(age) FROM Dogs ),SELECT last_name FROM Owners WHERE owner_id IN (SELECT owner_id FROM Dogs ORDER BY date_of_birth DESC LIMIT 1),WRONG
dog_kennels,SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin',SELECT email_address FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin',CORRECT
dog_kennels,SELECT email_address FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin',SELECT email_address FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin',CORRECT
dog_kennels,"SELECT date_arrived , date_departed FROM Dogs","SELECT date_arrived , date_departed FROM Dogs",CORRECT
dog_kennels,"SELECT date_arrived , date_departed FROM Dogs","SELECT date_arrived , date_departed FROM Dogs",CORRECT
dog_kennels,SELECT count(DISTINCT dog_id) FROM Treatments,SELECT COUNT(*) FROM Treatments,CORRECT
dog_kennels,SELECT count(DISTINCT dog_id) FROM Treatments,SELECT COUNT(DISTINCT dog_id) FROM Treatments,CORRECT
dog_kennels,SELECT count(DISTINCT professional_id) FROM Treatments,SELECT COUNT(DISTINCT professional_id) FROM Treatments,CORRECT
dog_kennels,SELECT count(DISTINCT professional_id) FROM Treatments,SELECT COUNT(*) FROM professionals AS T1 JOIN treatments AS T2 ON T1.professional_id = T2.professional_id,CORRECT
dog_kennels,"SELECT role_code , street , city , state FROM professionals WHERE city LIKE '%West%'","SELECT T1.role_code, T1.street, T1.city, T1.state FROM Professionals AS T1 WHERE T1.city LIKE ""%West%""",CORRECT
dog_kennels,"SELECT role_code , street , city , state FROM professionals WHERE city LIKE '%West%'","SELECT T1.role_code , T1.street , T1.city , T1.state FROM professionals AS T1 JOIN addresses AS T2 ON T1.professional_id = T2.professional_id WHERE T2.city LIKE '%West%'",WRONG
dog_kennels,"SELECT first_name , last_name , email_address FROM Owners WHERE state LIKE '%North%'","SELECT first_name, last_name, email_address FROM Owners WHERE state LIKE '%North%'",CORRECT
dog_kennels,"SELECT first_name , last_name , email_address FROM Owners WHERE state LIKE '%North%'","SELECT Owners.first_name, Owners.last_name, Owners.email_address FROM Owners WHERE Owners.state LIKE '%North%'",CORRECT
dog_kennels,SELECT count(*) FROM Dogs WHERE age < ( SELECT avg(age) FROM Dogs ),SELECT count(*) FROM dogs WHERE age < (SELECT avg(age) FROM dogs),CORRECT
dog_kennels,SELECT count(*) FROM Dogs WHERE age < ( SELECT avg(age) FROM Dogs ),SELECT count(*) FROM dogs WHERE age < (SELECT avg(age) FROM dogs),CORRECT
dog_kennels,SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,SELECT cost_of_treatment FROM Treatments WHERE treatment_id = (SELECT max(treatment_id) FROM Treatments),WRONG
dog_kennels,SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,CORRECT
dog_kennels,SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments ),SELECT COUNT(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments ),CORRECT
dog_kennels,SELECT count(*) from dogs where dog_id not in ( select dog_id from treatments ),SELECT count(*) FROM Dogs WHERE dog_id NOT IN (SELECT dog_id FROM Treatments),CORRECT
dog_kennels,SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs ),SELECT COUNT(DISTINCT o.owner_id) FROM Owners o LEFT JOIN Dogs d ON o.owner_id = d.owner_id WHERE d.owner_id IS NULL,CORRECT
dog_kennels,SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs ),SELECT COUNT(DISTINCT Owners.owner_id) FROM Owners LEFT JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.owner_id IS NULL,CORRECT
dog_kennels,SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments ),SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments ),CORRECT
dog_kennels,SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments ),SELECT count(*) FROM professionals WHERE professional_id NOT IN (SELECT professional_id FROM treatments),CORRECT
dog_kennels,"SELECT name , age , weight FROM Dogs WHERE abandoned_yn = 1","SELECT name , age , weight FROM Dogs WHERE abandoned_yn = 1",CORRECT
dog_kennels,"SELECT name , age , weight FROM Dogs WHERE abandoned_yn = 1","SELECT name , age , weight FROM Dogs WHERE abandoned_yn = 1",CORRECT
dog_kennels,SELECT avg(age) FROM Dogs,SELECT avg(age) FROM Dogs,CORRECT
dog_kennels,SELECT avg(age) FROM Dogs,SELECT avg(age) FROM Dogs,CORRECT
dog_kennels,SELECT max(age) FROM Dogs,SELECT age FROM Dogs ORDER BY age DESC LIMIT 1,CORRECT
dog_kennels,SELECT max(age) FROM Dogs,SELECT age FROM Dogs ORDER BY age DESC LIMIT 1,CORRECT
dog_kennels,"SELECT charge_type , charge_amount FROM Charges","SELECT charge_type , sum(charge_amount) FROM Charges GROUP BY charge_type",WRONG
dog_kennels,"SELECT charge_type , charge_amount FROM Charges","SELECT charge_type , charge_amount FROM Charges",CORRECT
dog_kennels,SELECT max(charge_amount) FROM Charges,SELECT charge_amount FROM charges ORDER BY charge_amount DESC LIMIT 1,CORRECT
dog_kennels,SELECT max(charge_amount) FROM Charges,SELECT charge_amount FROM charges ORDER BY charge_amount DESC LIMIT 1,CORRECT
dog_kennels,"SELECT email_address , cell_number , home_phone FROM professionals","SELECT professional_email_address , professional_cell_number , professional_home_phone FROM professionals",WRONG
dog_kennels,"SELECT email_address , cell_number , home_phone FROM professionals","SELECT email_address , cell_number , home_phone FROM professionals",CORRECT
dog_kennels,"SELECT DISTINCT breed_code , size_code FROM dogs","SELECT breed_code, size_code FROM Breeds, Sizes",WRONG
dog_kennels,"SELECT DISTINCT breed_code , size_code FROM dogs","SELECT breed_code , size_code FROM Dogs GROUP BY breed_code , size_code",WRONG
dog_kennels,"SELECT DISTINCT T1.first_name , T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code","SELECT T1.first_name , T2.treatment_type_description FROM professionals AS T1 JOIN treatment AS T2 ON T1.professional_id = T2.professional_id",WRONG
dog_kennels,"SELECT DISTINCT T1.first_name , T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code","SELECT T1.first_name , T2.treatment_type_description FROM professionals AS T1 JOIN treatments AS T2 ON T1.professional_id = T2.professional_id",WRONG
singer,SELECT count(*) FROM singer,SELECT count(*) FROM singer,CORRECT
singer,SELECT count(*) FROM singer,SELECT count(*) FROM singer,CORRECT
singer,SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC,SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC,CORRECT
singer,SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC,SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC,CORRECT
singer,"SELECT Birth_Year , Citizenship FROM singer","SELECT Birth_Year , Citizenship FROM singer",CORRECT
singer,"SELECT Birth_Year , Citizenship FROM singer","SELECT Birth_Year , Citizenship FROM singer",CORRECT
singer,"SELECT Name FROM singer WHERE Citizenship != ""France""","SELECT Name FROM singer WHERE Citizenship != ""France""",CORRECT
singer,"SELECT Name FROM singer WHERE Citizenship != ""France""",SELECT name FROM singer WHERE citizenship != 'French',WRONG
singer,SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949,SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949,CORRECT
singer,SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949,SELECT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949,CORRECT
singer,SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1,SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer),CORRECT
singer,SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1,SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID ORDER BY T1.Net_Worth_Millions DESC LIMIT 1,WRONG
singer,"SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship","SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship",CORRECT
singer,"SELECT Citizenship , COUNT(*) FROM singer GROUP BY Citizenship","SELECT Citizenship , count(*) FROM singer GROUP BY Citizenship",CORRECT
singer,SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1,SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1,CORRECT
singer,SELECT citizenship from singer group by citizenship order by count(*) desc limit 1,SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1,CORRECT
singer,"SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship","SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",CORRECT
singer,"SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship","SELECT Citizenship , max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",CORRECT
singer,"SELECT T2.Title , T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID","SELECT Title , Name FROM song JOIN singer ON song.Singer_ID = singer.Singer_ID",CORRECT
singer,"SELECT T2.Title , T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID","SELECT Title , Name FROM song INNER JOIN singer ON song.Singer_ID = singer.Singer_ID",CORRECT
singer,SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000,SELECT DISTINCT Name FROM singer WHERE Song_ID IN (SELECT Song_ID FROM song WHERE Sales > 300000),WRONG
singer,SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID WHERE T2.Sales > 300000,SELECT DISTINCT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song WHERE Sales > 300000),WRONG
singer,SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*) > 1,SELECT Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Singer_ID HAVING COUNT(*) > 1,WRONG
singer,SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*) > 1,SELECT name FROM singer WHERE singer_id IN (SELECT singer_id FROM song GROUP BY singer_id HAVING COUNT(*) > 1),WRONG
singer,"SELECT T1.Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name","SELECT T1.Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Singer_ID",WRONG
singer,"SELECT T1.Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name","SELECT T1.Name , sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name",CORRECT
singer,SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song),SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song),CORRECT
singer,SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song),SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song),CORRECT
singer,SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955,SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955,CORRECT
singer,SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955,SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955,CORRECT
real_estate_properties,SELECT count(*) FROM Other_Available_Features,SELECT COUNT(*) FROM Other_Available_Features,CORRECT
real_estate_properties,"SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T1.feature_name = ""AirCon""","SELECT feature_type_name FROM Ref_Feature_Types WHERE feature_type_code = (SELECT feature_type_code FROM Other_Available_Features WHERE feature_name = ""AirCon"");",WRONG
real_estate_properties,SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code GROUP BY T1.property_type_code,"SELECT property_type_description FROM Ref_Property_Types WHERE property_type_code = ""APT""",WRONG
real_estate_properties,"SELECT property_name FROM Properties WHERE property_type_code = ""House"" UNION SELECT property_name FROM Properties WHERE property_type_code = ""Apartment"" AND room_count > 1",SELECT property_name FROM Properties WHERE property_type_code = 'HSE' OR (property_type_code = 'APT' AND room_count > 1),WRONG
